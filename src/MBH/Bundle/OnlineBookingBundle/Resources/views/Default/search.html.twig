{% import _self as macro %}
<link rel="stylesheet" href="{{ absolute_url(asset('bundles/mbhbase/css/mbsuperfont/styles.css')) }}">
<link rel="stylesheet" href="{{ absolute_url(asset('bundles/mbhonlinebooking/css/ssearch.css')) }}">
<script src="https://code.highcharts.com/stock/highstock.js"></script>

<script src="https://cdnjs.cloudflare.com/ajax/libs/iCheck/1.0.2/icheck.min.js"></script>
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/iCheck/1.0.2/skins/square/_all.css">

<div id="online-booking-search">
    <p class="restitle">Курортная сеть "Азовский": варианты размещения в выбранные объекты</p>
    <div class="infoIncludeN">
        Что входит в стоимость путевки:
        <a href="http://azovsky.ru/putevka-v-Crimea/" target="_blank">Азовский</a>,
        <a href="http://azovsky.ru/azovland/azovland-putevka/" style="" target="_blank">АзовЛенд</a>
    </div>
    {% for offerByRoomType in searchResults %}
        {% set roomType, tariffResults, query, images, children = offerByRoomType.roomType, offerByRoomType.results, offerByRoomType.query, offerByRoomType.images, offerByRoomType.query.children %}
        {% set firstTariffResult, lastTariffResult = tariffResults|first, tariffResults|last %}
        {% set leftRoomKey, dates = offerByRoomType.leftRoomKey, offerByRoomType.dates %}
        <section class="s_results">
        <div class="oneblockinrdm room-type-row {{ offerByRoomType.additional?'additional':'' }}" data-roomtype="{{ roomType.id }}">
            <div class="leftrdm">
                <div class="imghotel"
                     {% set mainimage = offerByRoomType.mainimage %}
                     style="background:url('{{ absolute_url(asset(mainimage.path|imagine_filter('thumb_275x210'))) }}')no-repeat;background-size:cover;">
                    {% if offerByRoomType.additional %}
                        <p class="special-strip">
                            Другие даты
                        </p>
                    {% endif %}
                    <div class="inghotelline">
                        {# Костыль для вывода главной фото первой в списке. Сделано до реализации очередности. #}
                        {% for image in images %}
                            {% if loop.first and not image.isMain %}
                                {{ macro.drawimage(mainimage, loop) }}
                                {{ macro.drawimage(image, loop) }}
                            {% elseif not loop.first and image.isMain %}
                            {% else %}
                            {{ macro.drawimage(image, loop) }}
                            {% endif %}
                        {% endfor %}
                        {#Конец костыля#}
                        {#Вернуть после убирания костыля#}
                        {#{% for image in images %}
                            <a style="{{ (loop.index > 1) ? 'display: none;':'' }}" class="fancybox" href="{{ absolute_url(asset(image.path)) }}"
                               rel="cat{{ loop.parent.loop.index }}">
                                <img src="{{ absolute_url(image.path|imagine_filter('thumb_275x210')) }}" alt="">
                            </a>
                        {% endfor %}#}
                    </div>
                </div>
            </div>
            <div class="rightrdm">
                <div class="leftinrdm">
                    <p class="titlerdm">
                        {% if hotelsLinks is defined and roomType.hotel.id in hotelsLinks|keys %}
                        <a href="{{ hotelsLinks[roomType.hotel.id] }}" class="hotel_link" target="_blank">
                            {{ roomType.hotel.fullTitle }}
                        </a>
                        {% else %}
                            {{ roomType.hotel.fullTitle }}
                        {% endif %}
                        &nbsp;</p>
                    <p class="numtype"><b>Тип номера:</b><br>
                        {% if roomType.descriptionurl is defined and roomType.descriptionurl is not empty %}
                            <a class="room_link" href="{{ roomType.descriptionUrl }}"
                               target="_blank">{{ roomType.fullTitle }}</a>
                        {% else %}
                            {{ roomType.fullTitle }}
                        {% endif %}
                    </p>
                    <p class="gueststype">
                        <b>Гости:</b>
                        {{ query.adults }} взр.
                        {% transchoice children %}
                        {0} | [1,4] + %children% реб |[5,Inf[ + %children% дет.
                        {% endtranschoice %}
                    </p>
                    {% if hotelsLinks.eat is defined and hotelsLinks.eat is not empty %}
                    <a href="{{ hotelsLinks.eat }}" class="eat_link" target="_blank">
                        <p class="eattype"><img src="images/vl.png" alt=""> 3-разовое питание<br>шведский стол</p>
                    </a>
                    {% else %}
                        <img src="images/vl.png" alt=""> 3-разовое питание<br>шведский стол</p>
                    {% endif %}
                    <div class="iconstype">
                        {% for facility in (roomType.types|first).facilities %}
                            <i class="fa fa-2x mbf-{{ facility }}" title="{{ facility|trans }}"></i>
                        {% endfor %}
                    </div>
                </div>
                <div class="rightinrdm">
                    <p class="titlerdm">Цена за {{ firstTariffResult.nights }} {{ 'nights'|transchoice(firstTariffResult.nights) }}</p>
                    <div class="clear"></div>
                    <p class="pricerdm">
                        {% set prices = count_prices(tariffResults) %}
                        {% if prices.old is not null %}
                        <span class="noneprice">{{ prices.old|number_format(0, thousandSep=' ') }}&#8381;</span>
                        {% endif %}
                        <span class="newprice">{{ prices.new|number_format(0, thousandSep=' ') }}&#8381;</span></p>
                    <p class="datesrdm">{{ dates.begin|date("d.m.Y") }} - {{ dates.end|date("d.m.Y") }}</p>
                    <p class="daysrdm">{{ firstTariffResult.days }} {{ 'days'|transchoice(firstTariffResult.days) }} / {{ firstTariffResult.nights }} {{ 'nights'|transchoice(firstTariffResult.nights) }}</p>
                    {% set left_rooms = left_sale(firstTariffResult.roomsCount, leftRoomKey) %}
                    <p class="lastrdm">{{ 'left'|transchoice(left_rooms) }} {{ left_rooms }} {{ 'leftroom'|transchoice(left_rooms) }}</p>{#TODO:Add twig function#}
                    <p class="bronsrdm">{#забронировано сегодня 9 раз#}</p>{#TODO:Уточнить#}
                </div>
                <div class="clear"></div>
            </div>
            <div class="clear"></div>
            <div class="lefttblrdm">
                <table class="pricetbl">
                    <thead>
                    <tr class="flinetbl">
                        <td>Тариф</td>
                        <td>Скидка</td>
                        <td>Цена</td>
                        <td></td>
                    </tr>
                    </thead>
                    <tbody class="tariff-container">
                    <i class="fa fa-spinner fa-pulse fa-3x fa-fw tariff-spinner"></i>
                    <span class="sr-only">Loading...</span>
                    {% for tariffResult in tariffResults %}
                        {{ include('@MBHOnlineBooking/Default/tariff.html.twig') }}
                    {% endfor %}
                    </tbody>
                </table>
            </div>
            <div class="righttblrdm">
                <div class="spros">Пользуется спросом!</div>
                {#<div class="btmactions">#}
                {#<a href="javascript:void(0)" tabindex="0" class="btn btn-default btn-booking-all"#}
                {#title="Отправить заявку">ВСЕ ПРЕДЛОЖЕНИЯ</a>#}
                {#<a href="javascript:void(0)" tabindex="1" class="btn btn-default btn-booking-reservation"#}
                {#title="Отправить заявку">ОТПРАВИТЬ ЗАЯВКУ</a>#}
                {#<a href="javascript:void(0)" tabindex="2" class="btn btn-warning btn-booking" title="Купить онлайн">КУПИТЬ#}
                {#ОНЛАЙН</a>#}
                {#</div>#}
                <a href="javascript:void(0)" class="btn-booking-reservation"><p class="btmone btmonenotspec">Отправить заявку</p></a>
                <a href="javascript:void(0)" class="btn-booking"><p class="btmtwo">Купить онлайн</p></a>
                {% if showAll is defined and showAll %}
                <a href="javascript:void(0)" class="btn-booking-all"><p class="btmthree">Показать всё</p></a>
                {% endif %}

            </div>
            <div class="clear"></div>
        </div>
    </section>
    {% endfor %}

    {% if searchResults|length != 0 %}
        <div class="infoIncludeN">Что входит в стоимость путевки:
            <a href="http://azovsky.ru/putevka-v-Crimea/" target="_blank">Азовский</a>,
            <a href="http://azovsky.ru/azovland/azovland-putevka/" target="_blank">АзовЛенд</a></div>
    {% endif %}
</div>

{% if searchResults|length == 0 %}
    <div style="background-color: #FFFFFF; padding: 15px">
        <strong><i class="fa fa-exclamation"></i> Варианты не найдены.</strong>
        <p>Пожалуйста, проверьте даты заезда и выезда.</p>
        <p>Или свяжитесь с нами: по телефону 8 (800) 775-15-41 (звонок бесплатный по всей России) или написав нам через
            <a href="/mail-us">форму обратной связи</a>.</p>
        <p>Мы обязательно Вам поможем!</p>
        <p>Спасибо, что выбираете Курортную сеть «Азовский»</p>
        <p><strong>Смотрите также: </strong><a href="http://azovsky.ru/specpredlojenia-dnia/">Спецпредложения</a></p>
    </div>
{% endif %}

{% macro drawimage(image, loop, showImages) %}
    <a style="{{ ( image.isMain or loop.index > showImages|default(3) ) ? 'display: none;':'' }}" class="fancybox" href="{{ absolute_url(asset(image.path)) }}"
       rel="cat{{ loop.parent.loop.index }}">
        <img src="{{ absolute_url(image.path|imagine_filter('thumb_275x210')) }}" alt="">
    </a>
{% endmacro %}

<script>
    var mychart, myprices, myrows = [];

    //BuyOnline
    var RoomTypeRow = function ($row) {
        this.$row = $row;
        this.$bookingButton = $row.find('.btn-booking');
        this.$bookingButtonReservation = $row.find('.btn-booking-reservation');
        this.$bookingButtonAll = $row.find('.btn-booking-all');
        this.tariffRows = [];
        this.selectedTariffRow = null;
        this.chartContainer = this.$row.find("div[id^=chart]").attr('id');
        this.roomTypeId = this.$row.data('roomtype');
    };

    RoomTypeRow.prototype.init = function () {
        this.initTariffs();
        this.bindEventHandlers();
        this.fancyInit()
    };

    RoomTypeRow.prototype.initTariffs = function () {
        var that = this;
        this.$row.find('.tariff-row').each(function () {
            var tariffRow = new TariffRow($(this));
            tariffRow.init(that);
            that.tariffRows.push(tariffRow);
        });
    };

    RoomTypeRow.prototype.bindEventHandlers = function () {
        var that = this;
        this.$bookingButtonAll.on('click', function (e) {
            e.preventDefault();
            e.stopPropagation();
            that.allTariffAction();
            $(this).off('click').find('.btmthree').removeClass('btmthree').addClass('btmthreeoff');
        });

    };

    RoomTypeRow.prototype.selectActiveTariff = function (tariffRow) {
        this.selectedTariffRow = tariffRow;
        this.reBuildHref();
    };

    RoomTypeRow.prototype.allTariffAction = function () {
        //TODO: Сделать затемнение?
        var that = this,
            $spinner = this.$row.find('.tariff-spinner'),
            formData = $("form#search-form").serialize();

        formData = formData +
            '&' + encodeURIComponent('search_form[roomType]') + '=' + this.roomTypeId +
            '&getalltariff=true';
        $spinner.toggle();
        var ajax = $.get({

                url: Routing.generate('online_booking', {}, true),
                data: formData
            }
        );

        ajax.done(function (data) {
            $spinner.toggle();
            that.removeTariffs();
            that.addTariffs(data);
        });
    };

    RoomTypeRow.prototype.addTariffs = function (html) {
        this.$row.find('.tariff-container').append(html);
        this.initTariffs();
    };

    RoomTypeRow.prototype.removeTariffs = function () {
        while (this.tariffRows.length) {
            var tariffRow = this.tariffRows.pop();
            tariffRow.selfRemove();
        }
        if (this.selectedTariffRow) {
            this.selectedTariffRow = null;
        }
    };
    RoomTypeRow.prototype.reBuildHref = function () {
        console.log('rebuild href');
        var href = this.selectedTariffRow.bookingHref;
        var form_href = '&' + $("form#search-form").serialize();
        href = href + form_href;

        this.$bookingButton.attr('href', href);
        this.$bookingButtonReservation.attr('href', href + '&reservation=true');
    };
    RoomTypeRow.prototype.handleChartData = function (data) {
        var chartData = data;
        $.each(this.tariffRows, function (index) {
            this.chartData = chartData[index];
        });

    };

    RoomTypeRow.prototype.fancyInit = function () {
        this.$row
            .find('.fancybox')
            .fancybox()
            .on('click', function (e) {
            e.stopPropagation();
        });

        this.$row
            .find(".imghotel")
            .on('click', function (e) {
            $.fancybox.open($('.fancybox', $(this)));

        });
    };

    RoomTypeRow.prototype.getChartOptions = function () {
        return {
            chart: {
                type: 'column',
                plotBorderWith: 1,
                height: 250,
                zoomType: false
            },
            title: {
                text: 'Календарь цен',
                align: 'center',
                floating: false
            },
            subtitle: {
                text: 'subtitle',
                floating: true
            },
            xAxis: {
                gridLineWidth: 0,
                type: 'category',
                labels: {
                    rotation: -75,
                    style: {
                        fontSize: '10px',
                        fontFamily: 'Verdana, sans-serif'
                    }
                }
            },
            yAxis: {
                gridLineWidth: 1,
                title: {
                    enabled: false,
                    text: 'Цена'
                },
                allowDecimail: false,
                labels: {
                    enabled: false,
                    format: '{value:,.0f} р'
                },
                tickInterval: 2000
            },
            scrollbar: {
                enabled: true,
                liveRedraw: true
            },
            legend: {
                enabled: false
            },
            plotOptions: {
                series: {
                    color: '#6894ee',
                    align: 'right',
                    allowPointSelect: false,
                    cursor: 'pointer',
                    dataLabels: {
                        format: '{point.y:,.0f} р',
                        enabled: true,
                        rotation: -90,
                        y: 30,
                        color: '#FFFFFF',
                        style: {
                            "fontSize": '10px',
                            "textShadow": false,
                            "textWeight": 100,
                            "stroke-width": "0px"
                        }
                    }
                },
                line: {
                    dataLabels: {
                        enabled: false
                    }
                }
            },
            tooltip: {
                backgroundColor: 'rgba(0, 0, 0, 0.85)',
                style: {
                    color: '#F0F0F0'
                },
                headerFormat: '<span style="font-size: 10px; text-align: center;">{point.key}</span><br/>',
                pointFormat: '<b>{point.y} руб.</b>'
            }
        };
    };

    var TariffRow = function ($row) {
        this.$row = $row;
        this.$radiobutton = this.$row.find('input[type=radio]');
        this.bookingHref = this.$row.data('url');
        this.roomTypeRow = null;
        this.chartData = {};
    };

    TariffRow.prototype.init = function (roomTypeRow) {
        var that = this;
        this.roomTypeRow = roomTypeRow;
        this.$radiobutton.on('ifChecked', function (e) {
            that.roomTypeRow.selectActiveTariff(that);
            that.$row.addClass('alerting').siblings().removeClass("alerting");
        });
        //Проблема в том что при инициализации (если checked) не генерится событие ifChecked, т.к.формально статус не изменяется
        //костыль в проверке и генерации события "руками"
        this.$radiobutton.on('ifCreated', function (e) {
            if ($(this).is(':checked')) {
                $(this).trigger('ifChecked');
            }
        });
        this.$radiobutton.iCheck({
            checkboxClass: 'icheckbox_square-green',
            radioClass: 'iradio_square-green',
            increaseArea: '20%' // optional
        });
        this.$row.on('click', function (e) {
            that.$radiobutton.iCheck('check');
        });
    };

    TariffRow.prototype.selfRemove = function () {
        this.$row.remove();
    };

    TariffRow.prototype.showChart = function () {
        if (!this.roomTypeRow.chart) {
            var options = this.roomTypeRow.getChartOptions();
            options.xAxis.min = this.chartData['showBegin'];
            options.xAxis.max = this.chartData['showEnd'];
            options.subtitle.text = this.chartData['roomTypeName'];
            options.yAxis.max = this.chartData['yMax'];
            options.yAxis.min = this.chartData['yMin'];

            this.roomTypeRow.chart = new Highcharts.Chart(this.roomTypeRow.chartContainer, options);
        }

        //Алярма!, массив с данными передается по ссылке  - по-умолчанию по сему
        //тут копия, которую и передаем. -3чч
        var prices = JSON.parse(JSON.stringify(this.chartData['prices']));

        if ('undefined' == typeof (this.roomTypeRow.chart.series[0])) {
            this.roomTypeRow.chart.addSeries({data: prices});
        } else {
            this.roomTypeRow.chart.series[0].setData(prices);
        }
    };

    TariffRow.prototype.drawChart = function () {
        var data = this.chartData,
            that = this;
        if ($.isEmptyObject(data)) {
            //Для одного тарифа
            //data = $.getJSON(getChartUrl(this))
            //Для всех тарифов
            data = $.getJSON(getChartRoomUrl(this));

            $.when(data).then(function (data) {
                //Закидываем данные в каждый tariffRow через roomType
                that.roomTypeRow.handleChartData(data);
                that.showChart();
            });
        } else {
            this.showChart();
        }

    };

    var getChartRoomUrl = function (tariffRow) {
        var data = [];
        var RoomTypeRow = tariffRow.roomTypeRow;
        RoomTypeRow.tariffRows.forEach(function (tariffRow) {
            var $row = tariffRow.$row;
            data.push({
                roomType: $row.data('roomtype'),
                tariff: $row.data('tariff'),
                adults: $row.data('adults'),
                children: $row.data('children'),
                begin: $row.data('begin'),
                end: $row.data('end')
            });
        });

        return Routing.generate('online_booking_calculationRoom',
            {
                data: JSON.stringify(data)

            }
            , true);
    };


    var init = function() {
            $.each($('.room-type-row'),function () {
                var roomTypeRow = new RoomTypeRow($(this));
                roomTypeRow.init();
                //Графики - нужно будет перенести в методы
                //roomTypeRow.tariffRows.forEach(function (tariffRow) {
                {#tariffRow.$row.on('click', function () {#}
                {#if ({{ useCharts?'true':'false' }}) {#}
                {#tariffRow.drawChart();#}
                {#}#}
                //tariffRow.selected();
                //start_bron(this);
                {#});#}
                //})
            });
    };

    $(function () {
        init();
    });

</script>