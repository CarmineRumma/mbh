<?php

namespace Hydrators;

use Doctrine\ODM\MongoDB\DocumentManager;
use Doctrine\ODM\MongoDB\Mapping\ClassMetadata;
use Doctrine\ODM\MongoDB\Hydrator\HydratorInterface;
use Doctrine\ODM\MongoDB\UnitOfWork;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ODM. DO NOT EDIT THIS FILE.
 */
class MBHBundlePackageBundleDocumentOrderDocumentHydrator implements HydratorInterface
{
    private $dm;
    private $unitOfWork;
    private $class;

    public function __construct(DocumentManager $dm, UnitOfWork $uow, ClassMetadata $class)
    {
        $this->dm = $dm;
        $this->unitOfWork = $uow;
        $this->class = $class;
    }

    public function hydrate($document, $data, array $hints = array())
    {
        $hydratedData = array();

        /** @Field(type="string") */
        if (isset($data['type'])) {
            $value = $data['type'];
            $return = (string) $value;
            $this->class->reflFields['type']->setValue($document, $return);
            $hydratedData['type'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['scanType'])) {
            $value = $data['scanType'];
            $return = (string) $value;
            $this->class->reflFields['scanType']->setValue($document, $return);
            $hydratedData['scanType'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['name'])) {
            $value = $data['name'];
            $return = (string) $value;
            $this->class->reflFields['name']->setValue($document, $return);
            $hydratedData['name'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['originalName'])) {
            $value = $data['originalName'];
            $return = (string) $value;
            $this->class->reflFields['originalName']->setValue($document, $return);
            $hydratedData['originalName'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['comment'])) {
            $value = $data['comment'];
            $return = (string) $value;
            $this->class->reflFields['comment']->setValue($document, $return);
            $hydratedData['comment'] = $return;
        }

        /** @ReferenceOne */
        if (isset($data['tourist'])) {
            $reference = $data['tourist'];
            if (isset($this->class->fieldMappings['tourist']['simple']) && $this->class->fieldMappings['tourist']['simple']) {
                $className = $this->class->fieldMappings['tourist']['targetDocument'];
                $mongoId = $reference;
            } else {
                $className = $this->unitOfWork->getClassNameForAssociation($this->class->fieldMappings['tourist'], $reference);
                $mongoId = $reference['$id'];
            }
            $targetMetadata = $this->dm->getClassMetadata($className);
            $id = $targetMetadata->getPHPIdentifierValue($mongoId);
            $return = $this->dm->getReference($className, $id);
            $this->class->reflFields['tourist']->setValue($document, $return);
            $hydratedData['tourist'] = $return;
        }

        /** @ReferenceOne */
        if (isset($data['organization'])) {
            $reference = $data['organization'];
            if (isset($this->class->fieldMappings['organization']['simple']) && $this->class->fieldMappings['organization']['simple']) {
                $className = $this->class->fieldMappings['organization']['targetDocument'];
                $mongoId = $reference;
            } else {
                $className = $this->unitOfWork->getClassNameForAssociation($this->class->fieldMappings['organization'], $reference);
                $mongoId = $reference['$id'];
            }
            $targetMetadata = $this->dm->getClassMetadata($className);
            $id = $targetMetadata->getPHPIdentifierValue($mongoId);
            $return = $this->dm->getReference($className, $id);
            $this->class->reflFields['organization']->setValue($document, $return);
            $hydratedData['organization'] = $return;
        }

        /** @ReferenceOne */
        if (isset($data['cashDocument'])) {
            $reference = $data['cashDocument'];
            if (isset($this->class->fieldMappings['cashDocument']['simple']) && $this->class->fieldMappings['cashDocument']['simple']) {
                $className = $this->class->fieldMappings['cashDocument']['targetDocument'];
                $mongoId = $reference;
            } else {
                $className = $this->unitOfWork->getClassNameForAssociation($this->class->fieldMappings['cashDocument'], $reference);
                $mongoId = $reference['$id'];
            }
            $targetMetadata = $this->dm->getClassMetadata($className);
            $id = $targetMetadata->getPHPIdentifierValue($mongoId);
            $return = $this->dm->getReference($className, $id);
            $this->class->reflFields['cashDocument']->setValue($document, $return);
            $hydratedData['cashDocument'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['extension'])) {
            $value = $data['extension'];
            $return = (string) $value;
            $this->class->reflFields['extension']->setValue($document, $return);
            $hydratedData['extension'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['mimeType'])) {
            $value = $data['mimeType'];
            $return = (string) $value;
            $this->class->reflFields['mimeType']->setValue($document, $return);
            $hydratedData['mimeType'] = $return;
        }

        /** @Field(type="date") */
        if (isset($data['createdAt'])) {
            $value = $data['createdAt'];
            if ($value === null) { $return = null; } else { $return = \Doctrine\ODM\MongoDB\Types\DateType::getDateTime($value); }
            $this->class->reflFields['createdAt']->setValue($document, clone $return);
            $hydratedData['createdAt'] = $return;
        }

        /** @Field(type="date") */
        if (isset($data['updatedAt'])) {
            $value = $data['updatedAt'];
            if ($value === null) { $return = null; } else { $return = \Doctrine\ODM\MongoDB\Types\DateType::getDateTime($value); }
            $this->class->reflFields['updatedAt']->setValue($document, clone $return);
            $hydratedData['updatedAt'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['createdBy'])) {
            $value = $data['createdBy'];
            $return = (string) $value;
            $this->class->reflFields['createdBy']->setValue($document, $return);
            $hydratedData['createdBy'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['updatedBy'])) {
            $value = $data['updatedBy'];
            $return = (string) $value;
            $this->class->reflFields['updatedBy']->setValue($document, $return);
            $hydratedData['updatedBy'] = $return;
        }
        return $hydratedData;
    }
}