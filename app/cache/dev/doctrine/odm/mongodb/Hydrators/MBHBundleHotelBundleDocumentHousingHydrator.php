<?php

namespace Hydrators;

use Doctrine\ODM\MongoDB\DocumentManager;
use Doctrine\ODM\MongoDB\Mapping\ClassMetadata;
use Doctrine\ODM\MongoDB\Hydrator\HydratorInterface;
use Doctrine\ODM\MongoDB\UnitOfWork;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ODM. DO NOT EDIT THIS FILE.
 */
class MBHBundleHotelBundleDocumentHousingHydrator implements HydratorInterface
{
    private $dm;
    private $unitOfWork;
    private $class;

    public function __construct(DocumentManager $dm, UnitOfWork $uow, ClassMetadata $class)
    {
        $this->dm = $dm;
        $this->unitOfWork = $uow;
        $this->class = $class;
    }

    public function hydrate($document, $data, array $hints = array())
    {
        $hydratedData = array();

        /** @ReferenceOne */
        if (isset($data['hotel'])) {
            $reference = $data['hotel'];
            if (isset($this->class->fieldMappings['hotel']['simple']) && $this->class->fieldMappings['hotel']['simple']) {
                $className = $this->class->fieldMappings['hotel']['targetDocument'];
                $mongoId = $reference;
            } else {
                $className = $this->unitOfWork->getClassNameForAssociation($this->class->fieldMappings['hotel'], $reference);
                $mongoId = $reference['$id'];
            }
            $targetMetadata = $this->dm->getClassMetadata($className);
            $id = $targetMetadata->getPHPIdentifierValue($mongoId);
            $return = $this->dm->getReference($className, $id);
            $this->class->reflFields['hotel']->setValue($document, $return);
            $hydratedData['hotel'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['name'])) {
            $value = $data['name'];
            $return = (string) $value;
            $this->class->reflFields['name']->setValue($document, $return);
            $hydratedData['name'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['internalName'])) {
            $value = $data['internalName'];
            $return = (string) $value;
            $this->class->reflFields['internalName']->setValue($document, $return);
            $hydratedData['internalName'] = $return;
        }

        /** @ReferenceOne */
        if (isset($data['city'])) {
            $reference = $data['city'];
            if (isset($this->class->fieldMappings['city']['simple']) && $this->class->fieldMappings['city']['simple']) {
                $className = $this->class->fieldMappings['city']['targetDocument'];
                $mongoId = $reference;
            } else {
                $className = $this->unitOfWork->getClassNameForAssociation($this->class->fieldMappings['city'], $reference);
                $mongoId = $reference['$id'];
            }
            $targetMetadata = $this->dm->getClassMetadata($className);
            $id = $targetMetadata->getPHPIdentifierValue($mongoId);
            $return = $this->dm->getReference($className, $id);
            $this->class->reflFields['city']->setValue($document, $return);
            $hydratedData['city'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['settlement'])) {
            $value = $data['settlement'];
            $return = (string) $value;
            $this->class->reflFields['settlement']->setValue($document, $return);
            $hydratedData['settlement'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['street'])) {
            $value = $data['street'];
            $return = (string) $value;
            $this->class->reflFields['street']->setValue($document, $return);
            $hydratedData['street'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['house'])) {
            $value = $data['house'];
            $return = (string) $value;
            $this->class->reflFields['house']->setValue($document, $return);
            $hydratedData['house'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['corpus'])) {
            $value = $data['corpus'];
            $return = (string) $value;
            $this->class->reflFields['corpus']->setValue($document, $return);
            $hydratedData['corpus'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['flat'])) {
            $value = $data['flat'];
            $return = (string) $value;
            $this->class->reflFields['flat']->setValue($document, $return);
            $hydratedData['flat'] = $return;
        }

        /** @Field(type="integer") */
        if (isset($data['vegaAddressId'])) {
            $value = $data['vegaAddressId'];
            $return = (int) $value;
            $this->class->reflFields['vegaAddressId']->setValue($document, $return);
            $hydratedData['vegaAddressId'] = $return;
        }

        /** @Field(type="id") */
        if (isset($data['_id'])) {
            $value = $data['_id'];
            $return = $value instanceof \MongoId ? (string) $value : $value;
            $this->class->reflFields['id']->setValue($document, $return);
            $hydratedData['id'] = $return;
        }

        /** @Field(type="boolean") */
        if (isset($data['isEnabled'])) {
            $value = $data['isEnabled'];
            $return = (bool) $value;
            $this->class->reflFields['isEnabled']->setValue($document, $return);
            $hydratedData['isEnabled'] = $return;
        }

        /** @Field(type="date") */
        if (isset($data['createdAt'])) {
            $value = $data['createdAt'];
            if ($value === null) { $return = null; } else { $return = \Doctrine\ODM\MongoDB\Types\DateType::getDateTime($value); }
            $this->class->reflFields['createdAt']->setValue($document, clone $return);
            $hydratedData['createdAt'] = $return;
        }

        /** @Field(type="date") */
        if (isset($data['updatedAt'])) {
            $value = $data['updatedAt'];
            if ($value === null) { $return = null; } else { $return = \Doctrine\ODM\MongoDB\Types\DateType::getDateTime($value); }
            $this->class->reflFields['updatedAt']->setValue($document, clone $return);
            $hydratedData['updatedAt'] = $return;
        }

        /** @Field(type="date") */
        if (isset($data['deletedAt'])) {
            $value = $data['deletedAt'];
            if ($value === null) { $return = null; } else { $return = \Doctrine\ODM\MongoDB\Types\DateType::getDateTime($value); }
            $this->class->reflFields['deletedAt']->setValue($document, clone $return);
            $hydratedData['deletedAt'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['createdBy'])) {
            $value = $data['createdBy'];
            $return = (string) $value;
            $this->class->reflFields['createdBy']->setValue($document, $return);
            $hydratedData['createdBy'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['updatedBy'])) {
            $value = $data['updatedBy'];
            $return = (string) $value;
            $this->class->reflFields['updatedBy']->setValue($document, $return);
            $hydratedData['updatedBy'] = $return;
        }
        return $hydratedData;
    }
}