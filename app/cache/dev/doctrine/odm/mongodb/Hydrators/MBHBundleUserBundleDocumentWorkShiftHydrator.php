<?php

namespace Hydrators;

use Doctrine\ODM\MongoDB\DocumentManager;
use Doctrine\ODM\MongoDB\Mapping\ClassMetadata;
use Doctrine\ODM\MongoDB\Hydrator\HydratorInterface;
use Doctrine\ODM\MongoDB\UnitOfWork;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ODM. DO NOT EDIT THIS FILE.
 */
class MBHBundleUserBundleDocumentWorkShiftHydrator implements HydratorInterface
{
    private $dm;
    private $unitOfWork;
    private $class;

    public function __construct(DocumentManager $dm, UnitOfWork $uow, ClassMetadata $class)
    {
        $this->dm = $dm;
        $this->unitOfWork = $uow;
        $this->class = $class;
    }

    public function hydrate($document, $data, array $hints = array())
    {
        $hydratedData = array();

        /** @Field(type="int_id") */
        if (isset($data['_id'])) {
            $value = $data['_id'];
            $return = (int) $value;
            $this->class->reflFields['id']->setValue($document, $return);
            $hydratedData['id'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['status'])) {
            $value = $data['status'];
            $return = (string) $value;
            $this->class->reflFields['status']->setValue($document, $return);
            $hydratedData['status'] = $return;
        }

        /** @Field(type="date") */
        if (isset($data['begin'])) {
            $value = $data['begin'];
            if ($value === null) { $return = null; } else { $return = \Doctrine\ODM\MongoDB\Types\DateType::getDateTime($value); }
            $this->class->reflFields['begin']->setValue($document, clone $return);
            $hydratedData['begin'] = $return;
        }

        /** @Field(type="date") */
        if (isset($data['end'])) {
            $value = $data['end'];
            if ($value === null) { $return = null; } else { $return = \Doctrine\ODM\MongoDB\Types\DateType::getDateTime($value); }
            $this->class->reflFields['end']->setValue($document, clone $return);
            $hydratedData['end'] = $return;
        }

        /** @Field(type="integer") */
        if (isset($data['beginGuestTotal'])) {
            $value = $data['beginGuestTotal'];
            $return = (int) $value;
            $this->class->reflFields['beginGuestTotal']->setValue($document, $return);
            $hydratedData['beginGuestTotal'] = $return;
        }

        /** @Field(type="integer") */
        if (isset($data['endGuestTotal'])) {
            $value = $data['endGuestTotal'];
            $return = (int) $value;
            $this->class->reflFields['endGuestTotal']->setValue($document, $return);
            $hydratedData['endGuestTotal'] = $return;
        }

        /** @Field(type="integer") */
        if (isset($data['beginTouristTotal'])) {
            $value = $data['beginTouristTotal'];
            $return = (int) $value;
            $this->class->reflFields['beginTouristTotal']->setValue($document, $return);
            $hydratedData['beginTouristTotal'] = $return;
        }

        /** @Field(type="integer") */
        if (isset($data['arrivalTouristTotal'])) {
            $value = $data['arrivalTouristTotal'];
            $return = (int) $value;
            $this->class->reflFields['arrivalTouristTotal']->setValue($document, $return);
            $hydratedData['arrivalTouristTotal'] = $return;
        }

        /** @Field(type="integer") */
        if (isset($data['noArrivalTouristTotal'])) {
            $value = $data['noArrivalTouristTotal'];
            $return = (int) $value;
            $this->class->reflFields['noArrivalTouristTotal']->setValue($document, $return);
            $hydratedData['noArrivalTouristTotal'] = $return;
        }

        /** @Field(type="integer") */
        if (isset($data['continuePackageTotal'])) {
            $value = $data['continuePackageTotal'];
            $return = (int) $value;
            $this->class->reflFields['continuePackageTotal']->setValue($document, $return);
            $hydratedData['continuePackageTotal'] = $return;
        }

        /** @Field(type="integer") */
        if (isset($data['departureTouristTotal'])) {
            $value = $data['departureTouristTotal'];
            $return = (int) $value;
            $this->class->reflFields['departureTouristTotal']->setValue($document, $return);
            $hydratedData['departureTouristTotal'] = $return;
        }

        /** @Field(type="integer") */
        if (isset($data['noDepartureTouristTotal'])) {
            $value = $data['noDepartureTouristTotal'];
            $return = (int) $value;
            $this->class->reflFields['noDepartureTouristTotal']->setValue($document, $return);
            $hydratedData['noDepartureTouristTotal'] = $return;
        }

        /** @Field(type="integer") */
        if (isset($data['cashIncomeTotal'])) {
            $value = $data['cashIncomeTotal'];
            $return = (int) $value;
            $this->class->reflFields['cashIncomeTotal']->setValue($document, $return);
            $hydratedData['cashIncomeTotal'] = $return;
        }

        /** @Field(type="integer") */
        if (isset($data['electronicCashIncomeTotal'])) {
            $value = $data['electronicCashIncomeTotal'];
            $return = (int) $value;
            $this->class->reflFields['electronicCashIncomeTotal']->setValue($document, $return);
            $hydratedData['electronicCashIncomeTotal'] = $return;
        }

        /** @Field(type="integer") */
        if (isset($data['cashExpenseTotal'])) {
            $value = $data['cashExpenseTotal'];
            $return = (int) $value;
            $this->class->reflFields['cashExpenseTotal']->setValue($document, $return);
            $hydratedData['cashExpenseTotal'] = $return;
        }

        /** @ReferenceOne */
        if (isset($data['closedBy'])) {
            $reference = $data['closedBy'];
            if (isset($this->class->fieldMappings['closedBy']['simple']) && $this->class->fieldMappings['closedBy']['simple']) {
                $className = $this->class->fieldMappings['closedBy']['targetDocument'];
                $mongoId = $reference;
            } else {
                $className = $this->unitOfWork->getClassNameForAssociation($this->class->fieldMappings['closedBy'], $reference);
                $mongoId = $reference['$id'];
            }
            $targetMetadata = $this->dm->getClassMetadata($className);
            $id = $targetMetadata->getPHPIdentifierValue($mongoId);
            $return = $this->dm->getReference($className, $id);
            $this->class->reflFields['closedBy']->setValue($document, $return);
            $hydratedData['closedBy'] = $return;
        }

        /** @Field(type="date") */
        if (isset($data['closedAt'])) {
            $value = $data['closedAt'];
            if ($value === null) { $return = null; } else { $return = \Doctrine\ODM\MongoDB\Types\DateType::getDateTime($value); }
            $this->class->reflFields['closedAt']->setValue($document, clone $return);
            $hydratedData['closedAt'] = $return;
        }

        /** @Field(type="boolean") */
        if (isset($data['isEnabled'])) {
            $value = $data['isEnabled'];
            $return = (bool) $value;
            $this->class->reflFields['isEnabled']->setValue($document, $return);
            $hydratedData['isEnabled'] = $return;
        }

        /** @Field(type="date") */
        if (isset($data['createdAt'])) {
            $value = $data['createdAt'];
            if ($value === null) { $return = null; } else { $return = \Doctrine\ODM\MongoDB\Types\DateType::getDateTime($value); }
            $this->class->reflFields['createdAt']->setValue($document, clone $return);
            $hydratedData['createdAt'] = $return;
        }

        /** @Field(type="date") */
        if (isset($data['updatedAt'])) {
            $value = $data['updatedAt'];
            if ($value === null) { $return = null; } else { $return = \Doctrine\ODM\MongoDB\Types\DateType::getDateTime($value); }
            $this->class->reflFields['updatedAt']->setValue($document, clone $return);
            $hydratedData['updatedAt'] = $return;
        }

        /** @Field(type="date") */
        if (isset($data['deletedAt'])) {
            $value = $data['deletedAt'];
            if ($value === null) { $return = null; } else { $return = \Doctrine\ODM\MongoDB\Types\DateType::getDateTime($value); }
            $this->class->reflFields['deletedAt']->setValue($document, clone $return);
            $hydratedData['deletedAt'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['createdBy'])) {
            $value = $data['createdBy'];
            $return = (string) $value;
            $this->class->reflFields['createdBy']->setValue($document, $return);
            $hydratedData['createdBy'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['updatedBy'])) {
            $value = $data['updatedBy'];
            $return = (string) $value;
            $this->class->reflFields['updatedBy']->setValue($document, $return);
            $hydratedData['updatedBy'] = $return;
        }

        /** @ReferenceOne */
        if (isset($data['hotel'])) {
            $reference = $data['hotel'];
            if (isset($this->class->fieldMappings['hotel']['simple']) && $this->class->fieldMappings['hotel']['simple']) {
                $className = $this->class->fieldMappings['hotel']['targetDocument'];
                $mongoId = $reference;
            } else {
                $className = $this->unitOfWork->getClassNameForAssociation($this->class->fieldMappings['hotel'], $reference);
                $mongoId = $reference['$id'];
            }
            $targetMetadata = $this->dm->getClassMetadata($className);
            $id = $targetMetadata->getPHPIdentifierValue($mongoId);
            $return = $this->dm->getReference($className, $id);
            $this->class->reflFields['hotel']->setValue($document, $return);
            $hydratedData['hotel'] = $return;
        }
        return $hydratedData;
    }
}