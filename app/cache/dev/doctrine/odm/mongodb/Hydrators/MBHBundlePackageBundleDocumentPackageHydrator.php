<?php

namespace Hydrators;

use Doctrine\ODM\MongoDB\DocumentManager;
use Doctrine\ODM\MongoDB\Mapping\ClassMetadata;
use Doctrine\ODM\MongoDB\Hydrator\HydratorInterface;
use Doctrine\ODM\MongoDB\UnitOfWork;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ODM. DO NOT EDIT THIS FILE.
 */
class MBHBundlePackageBundleDocumentPackageHydrator implements HydratorInterface
{
    private $dm;
    private $unitOfWork;
    private $class;

    public function __construct(DocumentManager $dm, UnitOfWork $uow, ClassMetadata $class)
    {
        $this->dm = $dm;
        $this->unitOfWork = $uow;
        $this->class = $class;
    }

    public function hydrate($document, $data, array $hints = array())
    {
        $hydratedData = array();

        /** @ReferenceOne */
        if (isset($data['order'])) {
            $reference = $data['order'];
            if (isset($this->class->fieldMappings['order']['simple']) && $this->class->fieldMappings['order']['simple']) {
                $className = $this->class->fieldMappings['order']['targetDocument'];
                $mongoId = $reference;
            } else {
                $className = $this->unitOfWork->getClassNameForAssociation($this->class->fieldMappings['order'], $reference);
                $mongoId = $reference['$id'];
            }
            $targetMetadata = $this->dm->getClassMetadata($className);
            $id = $targetMetadata->getPHPIdentifierValue($mongoId);
            $return = $this->dm->getReference($className, $id);
            $this->class->reflFields['order']->setValue($document, $return);
            $hydratedData['order'] = $return;
        }

        /** @Many */
        $mongoData = isset($data['services']) ? $data['services'] : null;
        $return = new \Doctrine\ODM\MongoDB\PersistentCollection(new \Doctrine\Common\Collections\ArrayCollection(), $this->dm, $this->unitOfWork);
        $return->setHints($hints);
        $return->setOwner($document, $this->class->fieldMappings['services']);
        $return->setInitialized(false);
        if ($mongoData) {
            $return->setMongoData($mongoData);
        }
        $this->class->reflFields['services']->setValue($document, $return);
        $hydratedData['services'] = $return;

        /** @ReferenceOne */
        if (isset($data['tariff'])) {
            $reference = $data['tariff'];
            if (isset($this->class->fieldMappings['tariff']['simple']) && $this->class->fieldMappings['tariff']['simple']) {
                $className = $this->class->fieldMappings['tariff']['targetDocument'];
                $mongoId = $reference;
            } else {
                $className = $this->unitOfWork->getClassNameForAssociation($this->class->fieldMappings['tariff'], $reference);
                $mongoId = $reference['$id'];
            }
            $targetMetadata = $this->dm->getClassMetadata($className);
            $id = $targetMetadata->getPHPIdentifierValue($mongoId);
            $return = $this->dm->getReference($className, $id);
            $this->class->reflFields['tariff']->setValue($document, $return);
            $hydratedData['tariff'] = $return;
        }

        /** @ReferenceOne */
        if (isset($data['roomType'])) {
            $reference = $data['roomType'];
            if (isset($this->class->fieldMappings['roomType']['simple']) && $this->class->fieldMappings['roomType']['simple']) {
                $className = $this->class->fieldMappings['roomType']['targetDocument'];
                $mongoId = $reference;
            } else {
                $className = $this->unitOfWork->getClassNameForAssociation($this->class->fieldMappings['roomType'], $reference);
                $mongoId = $reference['$id'];
            }
            $targetMetadata = $this->dm->getClassMetadata($className);
            $id = $targetMetadata->getPHPIdentifierValue($mongoId);
            $return = $this->dm->getReference($className, $id);
            $this->class->reflFields['roomType']->setValue($document, $return);
            $hydratedData['roomType'] = $return;
        }

        /** @ReferenceOne */
        if (isset($data['accommodation'])) {
            $reference = $data['accommodation'];
            if (isset($this->class->fieldMappings['accommodation']['simple']) && $this->class->fieldMappings['accommodation']['simple']) {
                $className = $this->class->fieldMappings['accommodation']['targetDocument'];
                $mongoId = $reference;
            } else {
                $className = $this->unitOfWork->getClassNameForAssociation($this->class->fieldMappings['accommodation'], $reference);
                $mongoId = $reference['$id'];
            }
            $targetMetadata = $this->dm->getClassMetadata($className);
            $id = $targetMetadata->getPHPIdentifierValue($mongoId);
            $return = $this->dm->getReference($className, $id);
            $this->class->reflFields['accommodation']->setValue($document, $return);
            $hydratedData['accommodation'] = $return;
        }

        /** @Many */
        $mongoData = isset($data['tourists']) ? $data['tourists'] : null;
        $return = new \Doctrine\ODM\MongoDB\PersistentCollection(new \Doctrine\Common\Collections\ArrayCollection(), $this->dm, $this->unitOfWork);
        $return->setHints($hints);
        $return->setOwner($document, $this->class->fieldMappings['tourists']);
        $return->setInitialized(false);
        if ($mongoData) {
            $return->setMongoData($mongoData);
        }
        $this->class->reflFields['tourists']->setValue($document, $return);
        $hydratedData['tourists'] = $return;

        /** @Field(type="integer") */
        if (isset($data['number'])) {
            $value = $data['number'];
            $return = (int) $value;
            $this->class->reflFields['number']->setValue($document, $return);
            $hydratedData['number'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['numberWithPrefix'])) {
            $value = $data['numberWithPrefix'];
            $return = (string) $value;
            $this->class->reflFields['numberWithPrefix']->setValue($document, $return);
            $hydratedData['numberWithPrefix'] = $return;
        }

        /** @Field(type="integer") */
        if (isset($data['adults'])) {
            $value = $data['adults'];
            $return = (int) $value;
            $this->class->reflFields['adults']->setValue($document, $return);
            $hydratedData['adults'] = $return;
        }

        /** @Field(type="integer") */
        if (isset($data['children'])) {
            $value = $data['children'];
            $return = (int) $value;
            $this->class->reflFields['children']->setValue($document, $return);
            $hydratedData['children'] = $return;
        }

        /** @Field(type="date") */
        if (isset($data['begin'])) {
            $value = $data['begin'];
            if ($value === null) { $return = null; } else { $return = \Doctrine\ODM\MongoDB\Types\DateType::getDateTime($value); }
            $this->class->reflFields['begin']->setValue($document, clone $return);
            $hydratedData['begin'] = $return;
        }

        /** @Field(type="date") */
        if (isset($data['end'])) {
            $value = $data['end'];
            if ($value === null) { $return = null; } else { $return = \Doctrine\ODM\MongoDB\Types\DateType::getDateTime($value); }
            $this->class->reflFields['end']->setValue($document, clone $return);
            $hydratedData['end'] = $return;
        }

        /** @ReferenceOne */
        if (isset($data['promotion'])) {
            $reference = $data['promotion'];
            if (isset($this->class->fieldMappings['promotion']['simple']) && $this->class->fieldMappings['promotion']['simple']) {
                $className = $this->class->fieldMappings['promotion']['targetDocument'];
                $mongoId = $reference;
            } else {
                $className = $this->unitOfWork->getClassNameForAssociation($this->class->fieldMappings['promotion'], $reference);
                $mongoId = $reference['$id'];
            }
            $targetMetadata = $this->dm->getClassMetadata($className);
            $id = $targetMetadata->getPHPIdentifierValue($mongoId);
            $return = $this->dm->getReference($className, $id);
            $this->class->reflFields['promotion']->setValue($document, $return);
            $hydratedData['promotion'] = $return;
        }

        /** @Field(type="float") */
        if (isset($data['promotionTotal'])) {
            $value = $data['promotionTotal'];
            $return = (float) $value;
            $this->class->reflFields['promotionTotal']->setValue($document, $return);
            $hydratedData['promotionTotal'] = $return;
        }

        /** @Field(type="float") */
        if (isset($data['price'])) {
            $value = $data['price'];
            $return = (float) $value;
            $this->class->reflFields['price']->setValue($document, $return);
            $hydratedData['price'] = $return;
        }

        /** @Field(type="float") */
        if (isset($data['originalPrice'])) {
            $value = $data['originalPrice'];
            $return = (float) $value;
            $this->class->reflFields['originalPrice']->setValue($document, $return);
            $hydratedData['originalPrice'] = $return;
        }

        /** @Field(type="float") */
        if (isset($data['totalOverwrite'])) {
            $value = $data['totalOverwrite'];
            $return = (float) $value;
            $this->class->reflFields['totalOverwrite']->setValue($document, $return);
            $hydratedData['totalOverwrite'] = $return;
        }

        /** @Field(type="hash") */
        if (isset($data['pricesByDate'])) {
            $value = $data['pricesByDate'];
            $return = $value;
            $this->class->reflFields['pricesByDate']->setValue($document, $return);
            $hydratedData['pricesByDate'] = $return;
        }

        /** @Many */
        $mongoData = isset($data['prices']) ? $data['prices'] : null;
        $return = new \Doctrine\ODM\MongoDB\PersistentCollection(new \Doctrine\Common\Collections\ArrayCollection(), $this->dm, $this->unitOfWork);
        $return->setHints($hints);
        $return->setOwner($document, $this->class->fieldMappings['prices']);
        $return->setInitialized(false);
        if ($mongoData) {
            $return->setMongoData($mongoData);
        }
        $this->class->reflFields['prices']->setValue($document, $return);
        $hydratedData['prices'] = $return;

        /** @Field(type="float") */
        if (isset($data['servicesPrice'])) {
            $value = $data['servicesPrice'];
            $return = (float) $value;
            $this->class->reflFields['servicesPrice']->setValue($document, $return);
            $hydratedData['servicesPrice'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['note'])) {
            $value = $data['note'];
            $return = (string) $value;
            $this->class->reflFields['note']->setValue($document, $return);
            $hydratedData['note'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['purposeOfArrival'])) {
            $value = $data['purposeOfArrival'];
            $return = (string) $value;
            $this->class->reflFields['purposeOfArrival']->setValue($document, $return);
            $hydratedData['purposeOfArrival'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['channelManagerType'])) {
            $value = $data['channelManagerType'];
            $return = (string) $value;
            $this->class->reflFields['channelManagerType']->setValue($document, $return);
            $hydratedData['channelManagerType'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['channelManagerId'])) {
            $value = $data['channelManagerId'];
            $return = (string) $value;
            $this->class->reflFields['channelManagerId']->setValue($document, $return);
            $hydratedData['channelManagerId'] = $return;
        }

        /** @Field(type="date") */
        if (isset($data['arrivalTime'])) {
            $value = $data['arrivalTime'];
            if ($value === null) { $return = null; } else { $return = \Doctrine\ODM\MongoDB\Types\DateType::getDateTime($value); }
            $this->class->reflFields['arrivalTime']->setValue($document, clone $return);
            $hydratedData['arrivalTime'] = $return;
        }

        /** @Field(type="date") */
        if (isset($data['departureTime'])) {
            $value = $data['departureTime'];
            if ($value === null) { $return = null; } else { $return = \Doctrine\ODM\MongoDB\Types\DateType::getDateTime($value); }
            $this->class->reflFields['departureTime']->setValue($document, clone $return);
            $hydratedData['departureTime'] = $return;
        }

        /** @Field(type="integer") */
        if (isset($data['discount'])) {
            $value = $data['discount'];
            $return = (int) $value;
            $this->class->reflFields['discount']->setValue($document, $return);
            $hydratedData['discount'] = $return;
        }

        /** @Field(type="boolean") */
        if (isset($data['isPercentDiscount'])) {
            $value = $data['isPercentDiscount'];
            $return = (bool) $value;
            $this->class->reflFields['isPercentDiscount']->setValue($document, $return);
            $hydratedData['isPercentDiscount'] = $return;
        }

        /** @Field(type="boolean") */
        if (isset($data['isCheckIn'])) {
            $value = $data['isCheckIn'];
            $return = (bool) $value;
            $this->class->reflFields['isCheckIn']->setValue($document, $return);
            $hydratedData['isCheckIn'] = $return;
        }

        /** @Field(type="boolean") */
        if (isset($data['isCheckOut'])) {
            $value = $data['isCheckOut'];
            $return = (bool) $value;
            $this->class->reflFields['isCheckOut']->setValue($document, $return);
            $hydratedData['isCheckOut'] = $return;
        }

        /** @Field(type="boolean") */
        if (isset($data['isSmoking'])) {
            $value = $data['isSmoking'];
            $return = (bool) $value;
            $this->class->reflFields['isSmoking']->setValue($document, $return);
            $hydratedData['isSmoking'] = $return;
        }

        /** @Field(type="boolean") */
        if (isset($data['corrupted'])) {
            $value = $data['corrupted'];
            $return = (bool) $value;
            $this->class->reflFields['corrupted']->setValue($document, $return);
            $hydratedData['corrupted'] = $return;
        }

        /** @Field(type="boolean") */
        if (isset($data['isLocked'])) {
            $value = $data['isLocked'];
            $return = (bool) $value;
            $this->class->reflFields['isLocked']->setValue($document, $return);
            $hydratedData['isLocked'] = $return;
        }

        /** @Field(type="boolean") */
        if (isset($data['isForceBooking'])) {
            $value = $data['isForceBooking'];
            $return = (bool) $value;
            $this->class->reflFields['isForceBooking']->setValue($document, $return);
            $hydratedData['isForceBooking'] = $return;
        }

        /** @Field(type="id") */
        if (isset($data['_id'])) {
            $value = $data['_id'];
            $return = $value instanceof \MongoId ? (string) $value : $value;
            $this->class->reflFields['id']->setValue($document, $return);
            $hydratedData['id'] = $return;
        }

        /** @Field(type="boolean") */
        if (isset($data['isEnabled'])) {
            $value = $data['isEnabled'];
            $return = (bool) $value;
            $this->class->reflFields['isEnabled']->setValue($document, $return);
            $hydratedData['isEnabled'] = $return;
        }

        /** @Field(type="date") */
        if (isset($data['createdAt'])) {
            $value = $data['createdAt'];
            if ($value === null) { $return = null; } else { $return = \Doctrine\ODM\MongoDB\Types\DateType::getDateTime($value); }
            $this->class->reflFields['createdAt']->setValue($document, clone $return);
            $hydratedData['createdAt'] = $return;
        }

        /** @Field(type="date") */
        if (isset($data['updatedAt'])) {
            $value = $data['updatedAt'];
            if ($value === null) { $return = null; } else { $return = \Doctrine\ODM\MongoDB\Types\DateType::getDateTime($value); }
            $this->class->reflFields['updatedAt']->setValue($document, clone $return);
            $hydratedData['updatedAt'] = $return;
        }

        /** @Field(type="date") */
        if (isset($data['deletedAt'])) {
            $value = $data['deletedAt'];
            if ($value === null) { $return = null; } else { $return = \Doctrine\ODM\MongoDB\Types\DateType::getDateTime($value); }
            $this->class->reflFields['deletedAt']->setValue($document, clone $return);
            $hydratedData['deletedAt'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['createdBy'])) {
            $value = $data['createdBy'];
            $return = (string) $value;
            $this->class->reflFields['createdBy']->setValue($document, $return);
            $hydratedData['createdBy'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['updatedBy'])) {
            $value = $data['updatedBy'];
            $return = (string) $value;
            $this->class->reflFields['updatedBy']->setValue($document, $return);
            $hydratedData['updatedBy'] = $return;
        }
        return $hydratedData;
    }
}