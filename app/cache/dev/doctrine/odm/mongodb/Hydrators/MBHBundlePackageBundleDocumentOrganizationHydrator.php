<?php

namespace Hydrators;

use Doctrine\ODM\MongoDB\DocumentManager;
use Doctrine\ODM\MongoDB\Mapping\ClassMetadata;
use Doctrine\ODM\MongoDB\Hydrator\HydratorInterface;
use Doctrine\ODM\MongoDB\UnitOfWork;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ODM. DO NOT EDIT THIS FILE.
 */
class MBHBundlePackageBundleDocumentOrganizationHydrator implements HydratorInterface
{
    private $dm;
    private $unitOfWork;
    private $class;

    public function __construct(DocumentManager $dm, UnitOfWork $uow, ClassMetadata $class)
    {
        $this->dm = $dm;
        $this->unitOfWork = $uow;
        $this->class = $class;
    }

    public function hydrate($document, $data, array $hints = array())
    {
        $hydratedData = array();

        /** @Field(type="id") */
        if (isset($data['_id'])) {
            $value = $data['_id'];
            $return = $value instanceof \MongoId ? (string) $value : $value;
            $this->class->reflFields['id']->setValue($document, $return);
            $hydratedData['id'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['name'])) {
            $value = $data['name'];
            $return = (string) $value;
            $this->class->reflFields['name']->setValue($document, $return);
            $hydratedData['name'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['shortName'])) {
            $value = $data['shortName'];
            $return = (string) $value;
            $this->class->reflFields['shortName']->setValue($document, $return);
            $hydratedData['shortName'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['directorFio'])) {
            $value = $data['directorFio'];
            $return = (string) $value;
            $this->class->reflFields['directorFio']->setValue($document, $return);
            $hydratedData['directorFio'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['accountantFio'])) {
            $value = $data['accountantFio'];
            $return = (string) $value;
            $this->class->reflFields['accountantFio']->setValue($document, $return);
            $hydratedData['accountantFio'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['phone'])) {
            $value = $data['phone'];
            $return = (string) $value;
            $this->class->reflFields['phone']->setValue($document, $return);
            $hydratedData['phone'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['email'])) {
            $value = $data['email'];
            $return = (string) $value;
            $this->class->reflFields['email']->setValue($document, $return);
            $hydratedData['email'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['kpp'])) {
            $value = $data['kpp'];
            $return = (string) $value;
            $this->class->reflFields['kpp']->setValue($document, $return);
            $hydratedData['kpp'] = $return;
        }

        /** @Field(type="date") */
        if (isset($data['registrationDate'])) {
            $value = $data['registrationDate'];
            if ($value === null) { $return = null; } else { $return = \Doctrine\ODM\MongoDB\Types\DateType::getDateTime($value); }
            $this->class->reflFields['registrationDate']->setValue($document, clone $return);
            $hydratedData['registrationDate'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['registrationNumber'])) {
            $value = $data['registrationNumber'];
            $return = (string) $value;
            $this->class->reflFields['registrationNumber']->setValue($document, $return);
            $hydratedData['registrationNumber'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['activityCode'])) {
            $value = $data['activityCode'];
            $return = (string) $value;
            $this->class->reflFields['activityCode']->setValue($document, $return);
            $hydratedData['activityCode'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['okpoCode'])) {
            $value = $data['okpoCode'];
            $return = (string) $value;
            $this->class->reflFields['okpoCode']->setValue($document, $return);
            $hydratedData['okpoCode'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['writerFio'])) {
            $value = $data['writerFio'];
            $return = (string) $value;
            $this->class->reflFields['writerFio']->setValue($document, $return);
            $hydratedData['writerFio'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['reason'])) {
            $value = $data['reason'];
            $return = (string) $value;
            $this->class->reflFields['reason']->setValue($document, $return);
            $hydratedData['reason'] = $return;
        }

        /** @ReferenceOne */
        if (isset($data['country'])) {
            $reference = $data['country'];
            if (isset($this->class->fieldMappings['country']['simple']) && $this->class->fieldMappings['country']['simple']) {
                $className = $this->class->fieldMappings['country']['targetDocument'];
                $mongoId = $reference;
            } else {
                $className = $this->unitOfWork->getClassNameForAssociation($this->class->fieldMappings['country'], $reference);
                $mongoId = $reference['$id'];
            }
            $targetMetadata = $this->dm->getClassMetadata($className);
            $id = $targetMetadata->getPHPIdentifierValue($mongoId);
            $return = $this->dm->getReference($className, $id);
            $this->class->reflFields['country']->setValue($document, $return);
            $hydratedData['country'] = $return;
        }

        /** @ReferenceOne */
        if (isset($data['region'])) {
            $reference = $data['region'];
            if (isset($this->class->fieldMappings['region']['simple']) && $this->class->fieldMappings['region']['simple']) {
                $className = $this->class->fieldMappings['region']['targetDocument'];
                $mongoId = $reference;
            } else {
                $className = $this->unitOfWork->getClassNameForAssociation($this->class->fieldMappings['region'], $reference);
                $mongoId = $reference['$id'];
            }
            $targetMetadata = $this->dm->getClassMetadata($className);
            $id = $targetMetadata->getPHPIdentifierValue($mongoId);
            $return = $this->dm->getReference($className, $id);
            $this->class->reflFields['region']->setValue($document, $return);
            $hydratedData['region'] = $return;
        }

        /** @ReferenceOne */
        if (isset($data['city'])) {
            $reference = $data['city'];
            if (isset($this->class->fieldMappings['city']['simple']) && $this->class->fieldMappings['city']['simple']) {
                $className = $this->class->fieldMappings['city']['targetDocument'];
                $mongoId = $reference;
            } else {
                $className = $this->unitOfWork->getClassNameForAssociation($this->class->fieldMappings['city'], $reference);
                $mongoId = $reference['$id'];
            }
            $targetMetadata = $this->dm->getClassMetadata($className);
            $id = $targetMetadata->getPHPIdentifierValue($mongoId);
            $return = $this->dm->getReference($className, $id);
            $this->class->reflFields['city']->setValue($document, $return);
            $hydratedData['city'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['street'])) {
            $value = $data['street'];
            $return = (string) $value;
            $this->class->reflFields['street']->setValue($document, $return);
            $hydratedData['street'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['house'])) {
            $value = $data['house'];
            $return = (string) $value;
            $this->class->reflFields['house']->setValue($document, $return);
            $hydratedData['house'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['corpus'])) {
            $value = $data['corpus'];
            $return = (string) $value;
            $this->class->reflFields['corpus']->setValue($document, $return);
            $hydratedData['corpus'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['flat'])) {
            $value = $data['flat'];
            $return = (string) $value;
            $this->class->reflFields['flat']->setValue($document, $return);
            $hydratedData['flat'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['index'])) {
            $value = $data['index'];
            $return = (string) $value;
            $this->class->reflFields['index']->setValue($document, $return);
            $hydratedData['index'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['bank'])) {
            $value = $data['bank'];
            $return = (string) $value;
            $this->class->reflFields['bank']->setValue($document, $return);
            $hydratedData['bank'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['bankBik'])) {
            $value = $data['bankBik'];
            $return = (string) $value;
            $this->class->reflFields['bankBik']->setValue($document, $return);
            $hydratedData['bankBik'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['bankAddress'])) {
            $value = $data['bankAddress'];
            $return = (string) $value;
            $this->class->reflFields['bankAddress']->setValue($document, $return);
            $hydratedData['bankAddress'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['correspondentAccount'])) {
            $value = $data['correspondentAccount'];
            $return = (string) $value;
            $this->class->reflFields['correspondentAccount']->setValue($document, $return);
            $hydratedData['correspondentAccount'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['checkingAccount'])) {
            $value = $data['checkingAccount'];
            $return = (string) $value;
            $this->class->reflFields['checkingAccount']->setValue($document, $return);
            $hydratedData['checkingAccount'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['type'])) {
            $value = $data['type'];
            $return = (string) $value;
            $this->class->reflFields['type']->setValue($document, $return);
            $hydratedData['type'] = $return;
        }

        /** @Many */
        $mongoData = isset($data['hotels']) ? $data['hotels'] : null;
        $return = new \Doctrine\ODM\MongoDB\PersistentCollection(new \Doctrine\Common\Collections\ArrayCollection(), $this->dm, $this->unitOfWork);
        $return->setHints($hints);
        $return->setOwner($document, $this->class->fieldMappings['hotels']);
        $return->setInitialized(false);
        if ($mongoData) {
            $return->setMongoData($mongoData);
        }
        $this->class->reflFields['hotels']->setValue($document, $return);
        $hydratedData['hotels'] = $return;

        /** @Field(type="string") */
        if (isset($data['comment'])) {
            $value = $data['comment'];
            $return = (string) $value;
            $this->class->reflFields['comment']->setValue($document, $return);
            $hydratedData['comment'] = $return;
        }

        /** @Field(type="date") */
        if (isset($data['createdAt'])) {
            $value = $data['createdAt'];
            if ($value === null) { $return = null; } else { $return = \Doctrine\ODM\MongoDB\Types\DateType::getDateTime($value); }
            $this->class->reflFields['createdAt']->setValue($document, clone $return);
            $hydratedData['createdAt'] = $return;
        }

        /** @Field(type="date") */
        if (isset($data['updatedAt'])) {
            $value = $data['updatedAt'];
            if ($value === null) { $return = null; } else { $return = \Doctrine\ODM\MongoDB\Types\DateType::getDateTime($value); }
            $this->class->reflFields['updatedAt']->setValue($document, clone $return);
            $hydratedData['updatedAt'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['createdBy'])) {
            $value = $data['createdBy'];
            $return = (string) $value;
            $this->class->reflFields['createdBy']->setValue($document, $return);
            $hydratedData['createdBy'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['updatedBy'])) {
            $value = $data['updatedBy'];
            $return = (string) $value;
            $this->class->reflFields['updatedBy']->setValue($document, $return);
            $hydratedData['updatedBy'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['inn'])) {
            $value = $data['inn'];
            $return = (string) $value;
            $this->class->reflFields['inn']->setValue($document, $return);
            $hydratedData['inn'] = $return;
        }
        return $hydratedData;
    }
}