<?php

namespace Hydrators;

use Doctrine\ODM\MongoDB\DocumentManager;
use Doctrine\ODM\MongoDB\Mapping\ClassMetadata;
use Doctrine\ODM\MongoDB\Hydrator\HydratorInterface;
use Doctrine\ODM\MongoDB\UnitOfWork;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ODM. DO NOT EDIT THIS FILE.
 */
class MBHBundlePriceBundleDocumentTariffServiceHydrator implements HydratorInterface
{
    private $dm;
    private $unitOfWork;
    private $class;

    public function __construct(DocumentManager $dm, UnitOfWork $uow, ClassMetadata $class)
    {
        $this->dm = $dm;
        $this->unitOfWork = $uow;
        $this->class = $class;
    }

    public function hydrate($document, $data, array $hints = array())
    {
        $hydratedData = array();

        /** @ReferenceOne */
        if (isset($data['service'])) {
            $reference = $data['service'];
            if (isset($this->class->fieldMappings['service']['simple']) && $this->class->fieldMappings['service']['simple']) {
                $className = $this->class->fieldMappings['service']['targetDocument'];
                $mongoId = $reference;
            } else {
                $className = $this->unitOfWork->getClassNameForAssociation($this->class->fieldMappings['service'], $reference);
                $mongoId = $reference['$id'];
            }
            $targetMetadata = $this->dm->getClassMetadata($className);
            $id = $targetMetadata->getPHPIdentifierValue($mongoId);
            $return = $this->dm->getReference($className, $id);
            $this->class->reflFields['service']->setValue($document, $return);
            $hydratedData['service'] = $return;
        }

        /** @Field(type="integer") */
        if (isset($data['amount'])) {
            $value = $data['amount'];
            $return = (int) $value;
            $this->class->reflFields['amount']->setValue($document, $return);
            $hydratedData['amount'] = $return;
        }

        /** @Field(type="integer") */
        if (isset($data['persons'])) {
            $value = $data['persons'];
            $return = (int) $value;
            $this->class->reflFields['persons']->setValue($document, $return);
            $hydratedData['persons'] = $return;
        }

        /** @Field(type="integer") */
        if (isset($data['nights'])) {
            $value = $data['nights'];
            $return = (int) $value;
            $this->class->reflFields['nights']->setValue($document, $return);
            $hydratedData['nights'] = $return;
        }

        /** @Field(type="id") */
        if (isset($data['_id'])) {
            $value = $data['_id'];
            $return = $value instanceof \MongoId ? (string) $value : $value;
            $this->class->reflFields['id']->setValue($document, $return);
            $hydratedData['id'] = $return;
        }

        /** @Field(type="boolean") */
        if (isset($data['isEnabled'])) {
            $value = $data['isEnabled'];
            $return = (bool) $value;
            $this->class->reflFields['isEnabled']->setValue($document, $return);
            $hydratedData['isEnabled'] = $return;
        }
        return $hydratedData;
    }
}