<?php

namespace Hydrators;

use Doctrine\ODM\MongoDB\DocumentManager;
use Doctrine\ODM\MongoDB\Mapping\ClassMetadata;
use Doctrine\ODM\MongoDB\Hydrator\HydratorInterface;
use Doctrine\ODM\MongoDB\UnitOfWork;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ODM. DO NOT EDIT THIS FILE.
 */
class MBHBundleCashBundleDocumentCashDocumentHydrator implements HydratorInterface
{
    private $dm;
    private $unitOfWork;
    private $class;

    public function __construct(DocumentManager $dm, UnitOfWork $uow, ClassMetadata $class)
    {
        $this->dm = $dm;
        $this->unitOfWork = $uow;
        $this->class = $class;
    }

    public function hydrate($document, $data, array $hints = array())
    {
        $hydratedData = array();

        /** @ReferenceOne */
        if (isset($data['order'])) {
            $reference = $data['order'];
            if (isset($this->class->fieldMappings['order']['simple']) && $this->class->fieldMappings['order']['simple']) {
                $className = $this->class->fieldMappings['order']['targetDocument'];
                $mongoId = $reference;
            } else {
                $className = $this->unitOfWork->getClassNameForAssociation($this->class->fieldMappings['order'], $reference);
                $mongoId = $reference['$id'];
            }
            $targetMetadata = $this->dm->getClassMetadata($className);
            $id = $targetMetadata->getPHPIdentifierValue($mongoId);
            $return = $this->dm->getReference($className, $id);
            $this->class->reflFields['order']->setValue($document, $return);
            $hydratedData['order'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['number'])) {
            $value = $data['number'];
            $return = (string) $value;
            $this->class->reflFields['number']->setValue($document, $return);
            $hydratedData['number'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['method'])) {
            $value = $data['method'];
            $return = (string) $value;
            $this->class->reflFields['method']->setValue($document, $return);
            $hydratedData['method'] = $return;
        }

        /** @Field(type="float") */
        if (isset($data['total'])) {
            $value = $data['total'];
            $return = (float) $value;
            $this->class->reflFields['total']->setValue($document, $return);
            $hydratedData['total'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['operation'])) {
            $value = $data['operation'];
            $return = (string) $value;
            $this->class->reflFields['operation']->setValue($document, $return);
            $hydratedData['operation'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['note'])) {
            $value = $data['note'];
            $return = (string) $value;
            $this->class->reflFields['note']->setValue($document, $return);
            $hydratedData['note'] = $return;
        }

        /** @Field(type="boolean") */
        if (isset($data['isConfirmed'])) {
            $value = $data['isConfirmed'];
            $return = (bool) $value;
            $this->class->reflFields['isConfirmed']->setValue($document, $return);
            $hydratedData['isConfirmed'] = $return;
        }

        /** @Field(type="boolean") */
        if (isset($data['isPaid'])) {
            $value = $data['isPaid'];
            $return = (bool) $value;
            $this->class->reflFields['isPaid']->setValue($document, $return);
            $hydratedData['isPaid'] = $return;
        }

        /** @Field(type="date") */
        if (isset($data['documentDate'])) {
            $value = $data['documentDate'];
            if ($value === null) { $return = null; } else { $return = \Doctrine\ODM\MongoDB\Types\DateType::getDateTime($value); }
            $this->class->reflFields['documentDate']->setValue($document, clone $return);
            $hydratedData['documentDate'] = $return;
        }

        /** @Field(type="date") */
        if (isset($data['paidDate'])) {
            $value = $data['paidDate'];
            if ($value === null) { $return = null; } else { $return = \Doctrine\ODM\MongoDB\Types\DateType::getDateTime($value); }
            $this->class->reflFields['paidDate']->setValue($document, clone $return);
            $hydratedData['paidDate'] = $return;
        }

        /** @ReferenceOne */
        if (isset($data['organizationPayer'])) {
            $reference = $data['organizationPayer'];
            if (isset($this->class->fieldMappings['organizationPayer']['simple']) && $this->class->fieldMappings['organizationPayer']['simple']) {
                $className = $this->class->fieldMappings['organizationPayer']['targetDocument'];
                $mongoId = $reference;
            } else {
                $className = $this->unitOfWork->getClassNameForAssociation($this->class->fieldMappings['organizationPayer'], $reference);
                $mongoId = $reference['$id'];
            }
            $targetMetadata = $this->dm->getClassMetadata($className);
            $id = $targetMetadata->getPHPIdentifierValue($mongoId);
            $return = $this->dm->getReference($className, $id);
            $this->class->reflFields['organizationPayer']->setValue($document, $return);
            $hydratedData['organizationPayer'] = $return;
        }

        /** @ReferenceOne */
        if (isset($data['touristPayer'])) {
            $reference = $data['touristPayer'];
            if (isset($this->class->fieldMappings['touristPayer']['simple']) && $this->class->fieldMappings['touristPayer']['simple']) {
                $className = $this->class->fieldMappings['touristPayer']['targetDocument'];
                $mongoId = $reference;
            } else {
                $className = $this->unitOfWork->getClassNameForAssociation($this->class->fieldMappings['touristPayer'], $reference);
                $mongoId = $reference['$id'];
            }
            $targetMetadata = $this->dm->getClassMetadata($className);
            $id = $targetMetadata->getPHPIdentifierValue($mongoId);
            $return = $this->dm->getReference($className, $id);
            $this->class->reflFields['touristPayer']->setValue($document, $return);
            $hydratedData['touristPayer'] = $return;
        }

        /** @ReferenceOne */
        if (isset($data['orderDocument'])) {
            $reference = $data['orderDocument'];
            if (isset($this->class->fieldMappings['orderDocument']['simple']) && $this->class->fieldMappings['orderDocument']['simple']) {
                $className = $this->class->fieldMappings['orderDocument']['targetDocument'];
                $mongoId = $reference;
            } else {
                $className = $this->unitOfWork->getClassNameForAssociation($this->class->fieldMappings['orderDocument'], $reference);
                $mongoId = $reference['$id'];
            }
            $targetMetadata = $this->dm->getClassMetadata($className);
            $id = $targetMetadata->getPHPIdentifierValue($mongoId);
            $return = $this->dm->getReference($className, $id);
            $this->class->reflFields['orderDocument']->setValue($document, $return);
            $hydratedData['orderDocument'] = $return;
        }

        /** @ReferenceOne */
        if (isset($data['article'])) {
            $reference = $data['article'];
            if (isset($this->class->fieldMappings['article']['simple']) && $this->class->fieldMappings['article']['simple']) {
                $className = $this->class->fieldMappings['article']['targetDocument'];
                $mongoId = $reference;
            } else {
                $className = $this->unitOfWork->getClassNameForAssociation($this->class->fieldMappings['article'], $reference);
                $mongoId = $reference['$id'];
            }
            $targetMetadata = $this->dm->getClassMetadata($className);
            $id = $targetMetadata->getPHPIdentifierValue($mongoId);
            $return = $this->dm->getReference($className, $id);
            $this->class->reflFields['article']->setValue($document, $return);
            $hydratedData['article'] = $return;
        }

        /** @Field(type="id") */
        if (isset($data['_id'])) {
            $value = $data['_id'];
            $return = $value instanceof \MongoId ? (string) $value : $value;
            $this->class->reflFields['id']->setValue($document, $return);
            $hydratedData['id'] = $return;
        }

        /** @Field(type="boolean") */
        if (isset($data['isEnabled'])) {
            $value = $data['isEnabled'];
            $return = (bool) $value;
            $this->class->reflFields['isEnabled']->setValue($document, $return);
            $hydratedData['isEnabled'] = $return;
        }

        /** @Field(type="date") */
        if (isset($data['createdAt'])) {
            $value = $data['createdAt'];
            if ($value === null) { $return = null; } else { $return = \Doctrine\ODM\MongoDB\Types\DateType::getDateTime($value); }
            $this->class->reflFields['createdAt']->setValue($document, clone $return);
            $hydratedData['createdAt'] = $return;
        }

        /** @Field(type="date") */
        if (isset($data['updatedAt'])) {
            $value = $data['updatedAt'];
            if ($value === null) { $return = null; } else { $return = \Doctrine\ODM\MongoDB\Types\DateType::getDateTime($value); }
            $this->class->reflFields['updatedAt']->setValue($document, clone $return);
            $hydratedData['updatedAt'] = $return;
        }

        /** @Field(type="date") */
        if (isset($data['deletedAt'])) {
            $value = $data['deletedAt'];
            if ($value === null) { $return = null; } else { $return = \Doctrine\ODM\MongoDB\Types\DateType::getDateTime($value); }
            $this->class->reflFields['deletedAt']->setValue($document, clone $return);
            $hydratedData['deletedAt'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['createdBy'])) {
            $value = $data['createdBy'];
            $return = (string) $value;
            $this->class->reflFields['createdBy']->setValue($document, $return);
            $hydratedData['createdBy'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['updatedBy'])) {
            $value = $data['updatedBy'];
            $return = (string) $value;
            $this->class->reflFields['updatedBy']->setValue($document, $return);
            $hydratedData['updatedBy'] = $return;
        }
        return $hydratedData;
    }
}