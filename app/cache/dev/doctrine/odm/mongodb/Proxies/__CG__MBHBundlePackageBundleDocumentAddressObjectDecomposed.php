<?php

namespace MongoDBODMProxies\__CG__\MBH\Bundle\PackageBundle\Document;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class AddressObjectDecomposed extends \MBH\Bundle\PackageBundle\Document\AddressObjectDecomposed implements \Doctrine\ODM\MongoDB\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', 'country', 'city', 'zipCode', 'district', 'region', 'settlement', 'urbanArea', 'street', 'corpus', 'house', 'flat', 'addressObject'];
        }

        return ['__isInitialized__', 'country', 'city', 'zipCode', 'district', 'region', 'settlement', 'urbanArea', 'street', 'corpus', 'house', 'flat', 'addressObject'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (AddressObjectDecomposed $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getCountry()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCountry', []);

        return parent::getCountry();
    }

    /**
     * {@inheritDoc}
     */
    public function setCountry(\MBH\Bundle\VegaBundle\Document\VegaState $country = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCountry', [$country]);

        return parent::setCountry($country);
    }

    /**
     * {@inheritDoc}
     */
    public function getCity()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCity', []);

        return parent::getCity();
    }

    /**
     * {@inheritDoc}
     */
    public function setCity($city)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCity', [$city]);

        return parent::setCity($city);
    }

    /**
     * {@inheritDoc}
     */
    public function getZipCode()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getZipCode', []);

        return parent::getZipCode();
    }

    /**
     * {@inheritDoc}
     */
    public function setZipCode($zipCode)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setZipCode', [$zipCode]);

        return parent::setZipCode($zipCode);
    }

    /**
     * {@inheritDoc}
     */
    public function getDistrict()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDistrict', []);

        return parent::getDistrict();
    }

    /**
     * {@inheritDoc}
     */
    public function setDistrict($district = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDistrict', [$district]);

        return parent::setDistrict($district);
    }

    /**
     * {@inheritDoc}
     */
    public function getRegion()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRegion', []);

        return parent::getRegion();
    }

    /**
     * {@inheritDoc}
     */
    public function setRegion(\MBH\Bundle\VegaBundle\Document\VegaRegion $region = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRegion', [$region]);

        return parent::setRegion($region);
    }

    /**
     * {@inheritDoc}
     */
    public function getSettlement()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSettlement', []);

        return parent::getSettlement();
    }

    /**
     * {@inheritDoc}
     */
    public function setSettlement($settlement)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSettlement', [$settlement]);

        return parent::setSettlement($settlement);
    }

    /**
     * {@inheritDoc}
     */
    public function getUrbanArea()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUrbanArea', []);

        return parent::getUrbanArea();
    }

    /**
     * {@inheritDoc}
     */
    public function setUrbanArea($urbanArea)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUrbanArea', [$urbanArea]);

        return parent::setUrbanArea($urbanArea);
    }

    /**
     * {@inheritDoc}
     */
    public function getStreet()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStreet', []);

        return parent::getStreet();
    }

    /**
     * {@inheritDoc}
     */
    public function setStreet($street)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setStreet', [$street]);

        return parent::setStreet($street);
    }

    /**
     * {@inheritDoc}
     */
    public function getCorpus()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCorpus', []);

        return parent::getCorpus();
    }

    /**
     * {@inheritDoc}
     */
    public function setCorpus($corpus)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCorpus', [$corpus]);

        return parent::setCorpus($corpus);
    }

    /**
     * {@inheritDoc}
     */
    public function getHouse()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getHouse', []);

        return parent::getHouse();
    }

    /**
     * {@inheritDoc}
     */
    public function setHouse($house)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setHouse', [$house]);

        return parent::setHouse($house);
    }

    /**
     * {@inheritDoc}
     */
    public function getFlat()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFlat', []);

        return parent::getFlat();
    }

    /**
     * {@inheritDoc}
     */
    public function setFlat($flat)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFlat', [$flat]);

        return parent::setFlat($flat);
    }

    /**
     * {@inheritDoc}
     */
    public function getAddressObject()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAddressObject', []);

        return parent::getAddressObject();
    }

    /**
     * {@inheritDoc}
     */
    public function setAddressObject($addressObject)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAddressObject', [$addressObject]);

        return parent::setAddressObject($addressObject);
    }

    /**
     * {@inheritDoc}
     */
    public function __toString()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, '__toString', []);

        return parent::__toString();
    }

}
