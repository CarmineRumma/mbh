<?php

namespace MongoDBODMProxies\__CG__\MBH\Bundle\PackageBundle\Document;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Order extends \MBH\Bundle\PackageBundle\Document\Order implements \Doctrine\ODM\MongoDB\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', 'id', 'source', 'packages', 'mainTourist', 'organization', 'cashDocuments', 'price', 'originalPrice', 'totalOverwrite', 'paid', 'isPaid', 'confirmed', 'status', 'onlinePaymentType', 'channelManagerType', 'channelManagerId', 'channelManagerHumanId', 'channelManagerHumanText', 'channelManagerEditDateTime', 'channelManagerStatus', 'note', 'card', 'pollQuestions', 'creditCard', 'documents', 'isEnabled', 'createdAt', 'updatedAt', 'deletedAt', 'createdBy', 'updatedBy'];
        }

        return ['__isInitialized__', 'id', 'source', 'packages', 'mainTourist', 'organization', 'cashDocuments', 'price', 'originalPrice', 'totalOverwrite', 'paid', 'isPaid', 'confirmed', 'status', 'onlinePaymentType', 'channelManagerType', 'channelManagerId', 'channelManagerHumanId', 'channelManagerHumanText', 'channelManagerEditDateTime', 'channelManagerStatus', 'note', 'card', 'pollQuestions', 'creditCard', 'documents', 'isEnabled', 'createdAt', 'updatedAt', 'deletedAt', 'createdBy', 'updatedBy'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Order $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * {@inheritDoc}
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);

        parent::__clone();
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function addPackage(\MBH\Bundle\PackageBundle\Document\Package $package)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addPackage', [$package]);

        return parent::addPackage($package);
    }

    /**
     * {@inheritDoc}
     */
    public function removePackage(\MBH\Bundle\PackageBundle\Document\Package $package)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removePackage', [$package]);

        return parent::removePackage($package);
    }

    /**
     * {@inheritDoc}
     */
    public function getPackages()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPackages', []);

        return parent::getPackages();
    }

    /**
     * {@inheritDoc}
     */
    public function setMainTourist(\MBH\Bundle\PackageBundle\Document\Tourist $mainTourist = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMainTourist', [$mainTourist]);

        return parent::setMainTourist($mainTourist);
    }

    /**
     * {@inheritDoc}
     */
    public function getMainTourist()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMainTourist', []);

        return parent::getMainTourist();
    }

    /**
     * {@inheritDoc}
     */
    public function getOrganization()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOrganization', []);

        return parent::getOrganization();
    }

    /**
     * {@inheritDoc}
     */
    public function setOrganization(\MBH\Bundle\PackageBundle\Document\Organization $organization = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOrganization', [$organization]);

        return parent::setOrganization($organization);
    }

    /**
     * {@inheritDoc}
     */
    public function setPrice($price)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPrice', [$price]);

        return parent::setPrice($price);
    }

    /**
     * {@inheritDoc}
     */
    public function getPrice($isFloat = false)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPrice', [$isFloat]);

        return parent::getPrice($isFloat);
    }

    /**
     * {@inheritDoc}
     */
    public function setPaid($paid)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPaid', [$paid]);

        return parent::setPaid($paid);
    }

    /**
     * {@inheritDoc}
     */
    public function getPaid()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPaid', []);

        return parent::getPaid();
    }

    /**
     * {@inheritDoc}
     */
    public function setIsPaid($isPaid)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIsPaid', [$isPaid]);

        return parent::setIsPaid($isPaid);
    }

    /**
     * {@inheritDoc}
     */
    public function getIsPaid()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIsPaid', []);

        return parent::getIsPaid();
    }

    /**
     * {@inheritDoc}
     */
    public function setConfirmed($confirmed)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setConfirmed', [$confirmed]);

        return parent::setConfirmed($confirmed);
    }

    /**
     * {@inheritDoc}
     */
    public function getConfirmed()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getConfirmed', []);

        return parent::getConfirmed();
    }

    /**
     * {@inheritDoc}
     */
    public function setStatus($status)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setStatus', [$status]);

        return parent::setStatus($status);
    }

    /**
     * {@inheritDoc}
     */
    public function getStatus()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStatus', []);

        return parent::getStatus();
    }

    /**
     * {@inheritDoc}
     */
    public function setNote($note)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNote', [$note]);

        return parent::setNote($note);
    }

    /**
     * {@inheritDoc}
     */
    public function getNote()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNote', []);

        return parent::getNote();
    }

    /**
     * {@inheritDoc}
     */
    public function calcPrice(\MBH\Bundle\PackageBundle\Document\Package $excludePackage = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'calcPrice', [$excludePackage]);

        return parent::calcPrice($excludePackage);
    }

    /**
     * {@inheritDoc}
     */
    public function addCashDocument(\MBH\Bundle\CashBundle\Document\CashDocument $cashDocument)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addCashDocument', [$cashDocument]);

        return parent::addCashDocument($cashDocument);
    }

    /**
     * {@inheritDoc}
     */
    public function removeCashDocument(\MBH\Bundle\CashBundle\Document\CashDocument $cashDocument)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeCashDocument', [$cashDocument]);

        return parent::removeCashDocument($cashDocument);
    }

    /**
     * {@inheritDoc}
     */
    public function getCashDocuments()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCashDocuments', []);

        return parent::getCashDocuments();
    }

    /**
     * {@inheritDoc}
     */
    public function prePersist()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'prePersist', []);

        return parent::prePersist();
    }

    /**
     * {@inheritDoc}
     */
    public function preUpdate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'preUpdate', []);

        return parent::preUpdate();
    }

    /**
     * {@inheritDoc}
     */
    public function checkPaid()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'checkPaid', []);

        return parent::checkPaid();
    }

    /**
     * {@inheritDoc}
     */
    public function setSource(\MBH\Bundle\PackageBundle\Document\PackageSource $source = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSource', [$source]);

        return parent::setSource($source);
    }

    /**
     * {@inheritDoc}
     */
    public function getSource()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSource', []);

        return parent::getSource();
    }

    /**
     * {@inheritDoc}
     */
    public function setCard($card)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCard', [$card]);

        return parent::setCard($card);
    }

    /**
     * {@inheritDoc}
     */
    public function getCard()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCard', []);

        return parent::getCard();
    }

    /**
     * {@inheritDoc}
     */
    public function setChannelManagerHumanId($channelManagerHumanId)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setChannelManagerHumanId', [$channelManagerHumanId]);

        return parent::setChannelManagerHumanId($channelManagerHumanId);
    }

    /**
     * {@inheritDoc}
     */
    public function getChannelManagerHumanId()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getChannelManagerHumanId', []);

        return parent::getChannelManagerHumanId();
    }

    /**
     * {@inheritDoc}
     */
    public function setChannelManagerType($channelManagerType)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setChannelManagerType', [$channelManagerType]);

        return parent::setChannelManagerType($channelManagerType);
    }

    /**
     * {@inheritDoc}
     */
    public function getChannelManagerType()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getChannelManagerType', []);

        return parent::getChannelManagerType();
    }

    /**
     * {@inheritDoc}
     */
    public function setChannelManagerId($channelManagerId)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setChannelManagerId', [$channelManagerId]);

        return parent::setChannelManagerId($channelManagerId);
    }

    /**
     * {@inheritDoc}
     */
    public function getChannelManagerId()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getChannelManagerId', []);

        return parent::getChannelManagerId();
    }

    /**
     * {@inheritDoc}
     */
    public function setTotalOverwrite($totalOverwrite)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTotalOverwrite', [$totalOverwrite]);

        return parent::setTotalOverwrite($totalOverwrite);
    }

    /**
     * {@inheritDoc}
     */
    public function getTotalOverwrite()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTotalOverwrite', []);

        return parent::getTotalOverwrite();
    }

    /**
     * {@inheritDoc}
     */
    public function removeAllPackages()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeAllPackages', []);

        return parent::removeAllPackages();
    }

    /**
     * {@inheritDoc}
     */
    public function setChannelManagerStatus($channelManagerStatus)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setChannelManagerStatus', [$channelManagerStatus]);

        return parent::setChannelManagerStatus($channelManagerStatus);
    }

    /**
     * {@inheritDoc}
     */
    public function getChannelManagerStatus()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getChannelManagerStatus', []);

        return parent::getChannelManagerStatus();
    }

    /**
     * {@inheritDoc}
     */
    public function addDocument(\MBH\Bundle\PackageBundle\Document\OrderDocument $document)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addDocument', [$document]);

        return parent::addDocument($document);
    }

    /**
     * {@inheritDoc}
     */
    public function removeDocument(\MBH\Bundle\PackageBundle\Document\OrderDocument $document)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeDocument', [$document]);

        return parent::removeDocument($document);
    }

    /**
     * {@inheritDoc}
     */
    public function getDocuments()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDocuments', []);

        return parent::getDocuments();
    }

    /**
     * {@inheritDoc}
     */
    public function getDocument($name)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDocument', [$name]);

        return parent::getDocument($name);
    }

    /**
     * {@inheritDoc}
     */
    public function removeDocumentByName($name)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeDocumentByName', [$name]);

        return parent::removeDocumentByName($name);
    }

    /**
     * {@inheritDoc}
     */
    public function getPaidStatus()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPaidStatus', []);

        return parent::getPaidStatus();
    }

    /**
     * {@inheritDoc}
     */
    public function getDebt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDebt', []);

        return parent::getDebt();
    }

    /**
     * {@inheritDoc}
     */
    public function getPayer()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPayer', []);

        return parent::getPayer();
    }

    /**
     * {@inheritDoc}
     */
    public function getFee()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFee', []);

        return parent::getFee();
    }

    /**
     * {@inheritDoc}
     */
    public function getFirstHotel()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFirstHotel', []);

        return parent::getFirstHotel();
    }

    /**
     * {@inheritDoc}
     */
    public function getFirstPackage()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFirstPackage', []);

        return parent::getFirstPackage();
    }

    /**
     * {@inheritDoc}
     */
    public function addPollQuestion(\MBH\Bundle\PackageBundle\Document\OrderPollQuestion $pollQuestion)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addPollQuestion', [$pollQuestion]);

        return parent::addPollQuestion($pollQuestion);
    }

    /**
     * {@inheritDoc}
     */
    public function removePollQuestion(\MBH\Bundle\PackageBundle\Document\OrderPollQuestion $pollQuestion)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removePollQuestion', [$pollQuestion]);

        return parent::removePollQuestion($pollQuestion);
    }

    /**
     * {@inheritDoc}
     */
    public function getPollQuestions($grouped = false)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPollQuestions', [$grouped]);

        return parent::getPollQuestions($grouped);
    }

    /**
     * {@inheritDoc}
     */
    public function removeAllPollQuestions()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeAllPollQuestions', []);

        return parent::removeAllPollQuestions();
    }

    /**
     * {@inheritDoc}
     */
    public function getOriginalPrice()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOriginalPrice', []);

        return parent::getOriginalPrice();
    }

    /**
     * {@inheritDoc}
     */
    public function setOriginalPrice($originalPrice)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOriginalPrice', [$originalPrice]);

        return parent::setOriginalPrice($originalPrice);
    }

    /**
     * {@inheritDoc}
     */
    public function getCreditCard()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreditCard', []);

        return parent::getCreditCard();
    }

    /**
     * {@inheritDoc}
     */
    public function setCreditCard(\MBH\Bundle\PackageBundle\Document\CreditCard $creditCard = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCreditCard', [$creditCard]);

        return parent::setCreditCard($creditCard);
    }

    /**
     * {@inheritDoc}
     */
    public function getChannelManagerHumanText()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getChannelManagerHumanText', []);

        return parent::getChannelManagerHumanText();
    }

    /**
     * {@inheritDoc}
     */
    public function setChannelManagerHumanText($channelManagerHumanText)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setChannelManagerHumanText', [$channelManagerHumanText]);

        return parent::setChannelManagerHumanText($channelManagerHumanText);
    }

    /**
     * {@inheritDoc}
     */
    public function getChannelManagerEditDateTime()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getChannelManagerEditDateTime', []);

        return parent::getChannelManagerEditDateTime();
    }

    /**
     * {@inheritDoc}
     */
    public function setChannelManagerEditDateTime($channelManagerEditDateTime)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setChannelManagerEditDateTime', [$channelManagerEditDateTime]);

        return parent::setChannelManagerEditDateTime($channelManagerEditDateTime);
    }

    /**
     * {@inheritDoc}
     */
    public function getOnlinePaymentType()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOnlinePaymentType', []);

        return parent::getOnlinePaymentType();
    }

    /**
     * {@inheritDoc}
     */
    public function setOnlinePaymentType($onlinePaymentType)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOnlinePaymentType', [$onlinePaymentType]);

        return parent::setOnlinePaymentType($onlinePaymentType);
    }

    /**
     * {@inheritDoc}
     */
    public function getIsEnabled()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIsEnabled', []);

        return parent::getIsEnabled();
    }

    /**
     * {@inheritDoc}
     */
    public function setIsEnabled($isEnabled)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIsEnabled', [$isEnabled]);

        return parent::setIsEnabled($isEnabled);
    }

    /**
     * {@inheritDoc}
     */
    public function __toString()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, '__toString', []);

        return parent::__toString();
    }

    /**
     * {@inheritDoc}
     */
    public function getName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getName', []);

        return parent::getName();
    }

    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setCreatedAt(\DateTime $createdAt)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCreatedAt', [$createdAt]);

        return parent::setCreatedAt($createdAt);
    }

    /**
     * {@inheritDoc}
     */
    public function getCreatedAt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreatedAt', []);

        return parent::getCreatedAt();
    }

    /**
     * {@inheritDoc}
     */
    public function setUpdatedAt(\DateTime $updatedAt)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUpdatedAt', [$updatedAt]);

        return parent::setUpdatedAt($updatedAt);
    }

    /**
     * {@inheritDoc}
     */
    public function getUpdatedAt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUpdatedAt', []);

        return parent::getUpdatedAt();
    }

    /**
     * {@inheritDoc}
     */
    public function setDeletedAt(\DateTime $deletedAt = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDeletedAt', [$deletedAt]);

        return parent::setDeletedAt($deletedAt);
    }

    /**
     * {@inheritDoc}
     */
    public function getDeletedAt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDeletedAt', []);

        return parent::getDeletedAt();
    }

    /**
     * {@inheritDoc}
     */
    public function isDeleted()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isDeleted', []);

        return parent::isDeleted();
    }

    /**
     * {@inheritDoc}
     */
    public function setCreatedBy($createdBy)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCreatedBy', [$createdBy]);

        return parent::setCreatedBy($createdBy);
    }

    /**
     * {@inheritDoc}
     */
    public function getCreatedBy()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreatedBy', []);

        return parent::getCreatedBy();
    }

    /**
     * {@inheritDoc}
     */
    public function setUpdatedBy($updatedBy)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUpdatedBy', [$updatedBy]);

        return parent::setUpdatedBy($updatedBy);
    }

    /**
     * {@inheritDoc}
     */
    public function getUpdatedBy()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUpdatedBy', []);

        return parent::getUpdatedBy();
    }

}
