<?php

namespace MongoDBODMProxies\__CG__\MBH\Bundle\HotelBundle\Document;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Hotel extends \MBH\Bundle\HotelBundle\Document\Hotel implements \Doctrine\ODM\MongoDB\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', 'fullTitle', 'title', 'prefix', 'isHostel', 'isDefault', 'latitude', 'longitude', 'type', 'theme', 'facilities', 'rating', 'roomTypes', 'roomTypesCategories', 'rooms', 'tariffs', 'servicesCategories', 'vashotelConfig', 'oktogoConfig', 'bookingConfig', 'hotelinnConfig', 'ostrovokConfig', 'myallocatorConfig', 'ingredientCategories', 'dishMenuCategories', 'country', 'region', 'city', 'settlement', 'street', 'house', 'corpus', 'flat', 'housings', 'file', 'logo', 'organization', 'vegaAddressId', 'description', 'id', 'isEnabled', 'createdAt', 'updatedAt', 'deletedAt', 'createdBy', 'updatedBy', 'internationalTitle'];
        }

        return ['__isInitialized__', 'fullTitle', 'title', 'prefix', 'isHostel', 'isDefault', 'latitude', 'longitude', 'type', 'theme', 'facilities', 'rating', 'roomTypes', 'roomTypesCategories', 'rooms', 'tariffs', 'servicesCategories', 'vashotelConfig', 'oktogoConfig', 'bookingConfig', 'hotelinnConfig', 'ostrovokConfig', 'myallocatorConfig', 'ingredientCategories', 'dishMenuCategories', 'country', 'region', 'city', 'settlement', 'street', 'house', 'corpus', 'flat', 'housings', 'file', 'logo', 'organization', 'vegaAddressId', 'description', 'id', 'isEnabled', 'createdAt', 'updatedAt', 'deletedAt', 'createdBy', 'updatedBy', 'internationalTitle'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Hotel $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * {@inheritDoc}
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);

        parent::__clone();
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getFullTitle()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFullTitle', []);

        return parent::getFullTitle();
    }

    /**
     * {@inheritDoc}
     */
    public function setFullTitle($fullTitle)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFullTitle', [$fullTitle]);

        return parent::setFullTitle($fullTitle);
    }

    /**
     * {@inheritDoc}
     */
    public function getTitle()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTitle', []);

        return parent::getTitle();
    }

    /**
     * {@inheritDoc}
     */
    public function setTitle($title)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTitle', [$title]);

        return parent::setTitle($title);
    }

    /**
     * {@inheritDoc}
     */
    public function getPrefix()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPrefix', []);

        return parent::getPrefix();
    }

    /**
     * {@inheritDoc}
     */
    public function setPrefix($prefix)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPrefix', [$prefix]);

        return parent::setPrefix($prefix);
    }

    /**
     * {@inheritDoc}
     */
    public function getIsDefault()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIsDefault', []);

        return parent::getIsDefault();
    }

    /**
     * {@inheritDoc}
     */
    public function setIsDefault($isDefault)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIsDefault', [$isDefault]);

        return parent::setIsDefault($isDefault);
    }

    /**
     * {@inheritDoc}
     */
    public function addRoomType(\MBH\Bundle\HotelBundle\Document\RoomType $roomType)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addRoomType', [$roomType]);

        return parent::addRoomType($roomType);
    }

    /**
     * {@inheritDoc}
     */
    public function removeRoomType(\MBH\Bundle\HotelBundle\Document\RoomType $roomType)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeRoomType', [$roomType]);

        return parent::removeRoomType($roomType);
    }

    /**
     * {@inheritDoc}
     */
    public function getRoomTypes()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRoomTypes', []);

        return parent::getRoomTypes();
    }

    /**
     * {@inheritDoc}
     */
    public function addRoom(\MBH\Bundle\HotelBundle\Document\Room $room)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addRoom', [$room]);

        return parent::addRoom($room);
    }

    /**
     * {@inheritDoc}
     */
    public function removeRoom(\MBH\Bundle\HotelBundle\Document\Room $room)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeRoom', [$room]);

        return parent::removeRoom($room);
    }

    /**
     * {@inheritDoc}
     */
    public function getRooms()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRooms', []);

        return parent::getRooms();
    }

    /**
     * {@inheritDoc}
     */
    public function addTariff(\MBH\Bundle\PriceBundle\Document\Tariff $tariff)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addTariff', [$tariff]);

        return parent::addTariff($tariff);
    }

    /**
     * {@inheritDoc}
     */
    public function removeTariff(\MBH\Bundle\PriceBundle\Document\Tariff $tariff)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeTariff', [$tariff]);

        return parent::removeTariff($tariff);
    }

    /**
     * {@inheritDoc}
     */
    public function getTariffs()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTariffs', []);

        return parent::getTariffs();
    }

    /**
     * {@inheritDoc}
     */
    public function getVashotelConfig()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getVashotelConfig', []);

        return parent::getVashotelConfig();
    }

    /**
     * {@inheritDoc}
     */
    public function setVashotelConfig(\MBH\Bundle\ChannelManagerBundle\Document\VashotelConfig $vashotelConfig)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setVashotelConfig', [$vashotelConfig]);

        return parent::setVashotelConfig($vashotelConfig);
    }

    /**
     * {@inheritDoc}
     */
    public function getOktogoConfig()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOktogoConfig', []);

        return parent::getOktogoConfig();
    }

    /**
     * {@inheritDoc}
     */
    public function setOktogoConfig(\MBH\Bundle\ChannelManagerBundle\Document\OktogoConfig $oktogoConfig)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOktogoConfig', [$oktogoConfig]);

        return parent::setOktogoConfig($oktogoConfig);
    }

    /**
     * {@inheritDoc}
     */
    public function addServicesCategory(\MBH\Bundle\PriceBundle\Document\ServiceCategory $servicesCategory)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addServicesCategory', [$servicesCategory]);

        return parent::addServicesCategory($servicesCategory);
    }

    /**
     * {@inheritDoc}
     */
    public function removeServicesCategory(\MBH\Bundle\PriceBundle\Document\ServiceCategory $servicesCategory)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeServicesCategory', [$servicesCategory]);

        return parent::removeServicesCategory($servicesCategory);
    }

    /**
     * {@inheritDoc}
     */
    public function getServicesCategories()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getServicesCategories', []);

        return parent::getServicesCategories();
    }

    /**
     * {@inheritDoc}
     */
    public function getServices($enabled = false, $online = false)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getServices', [$enabled, $online]);

        return parent::getServices($enabled, $online);
    }

    /**
     * {@inheritDoc}
     */
    public function getIsHostel()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIsHostel', []);

        return parent::getIsHostel();
    }

    /**
     * {@inheritDoc}
     */
    public function setIsHostel($isHostel)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIsHostel', [$isHostel]);

        return parent::setIsHostel($isHostel);
    }

    /**
     * {@inheritDoc}
     */
    public function getCountry()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCountry', []);

        return parent::getCountry();
    }

    /**
     * {@inheritDoc}
     */
    public function setCountry(\MBH\Bundle\HotelBundle\Document\Country $country)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCountry', [$country]);

        return parent::setCountry($country);
    }

    /**
     * {@inheritDoc}
     */
    public function getRegion()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRegion', []);

        return parent::getRegion();
    }

    /**
     * {@inheritDoc}
     */
    public function setRegion(\MBH\Bundle\HotelBundle\Document\Region $region)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRegion', [$region]);

        return parent::setRegion($region);
    }

    /**
     * {@inheritDoc}
     */
    public function getSettlement()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSettlement', []);

        return parent::getSettlement();
    }

    /**
     * {@inheritDoc}
     */
    public function setSettlement($settlement)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSettlement', [$settlement]);

        return parent::setSettlement($settlement);
    }

    /**
     * {@inheritDoc}
     */
    public function getLatitude()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLatitude', []);

        return parent::getLatitude();
    }

    /**
     * {@inheritDoc}
     */
    public function setLatitude($latitude)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLatitude', [$latitude]);

        return parent::setLatitude($latitude);
    }

    /**
     * {@inheritDoc}
     */
    public function getLongitude()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLongitude', []);

        return parent::getLongitude();
    }

    /**
     * {@inheritDoc}
     */
    public function setLongitude($longitude)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLongitude', [$longitude]);

        return parent::setLongitude($longitude);
    }

    /**
     * {@inheritDoc}
     */
    public function getType()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getType', []);

        return parent::getType();
    }

    /**
     * {@inheritDoc}
     */
    public function setType($type)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setType', [$type]);

        return parent::setType($type);
    }

    /**
     * {@inheritDoc}
     */
    public function getTheme()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTheme', []);

        return parent::getTheme();
    }

    /**
     * {@inheritDoc}
     */
    public function setTheme($theme)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTheme', [$theme]);

        return parent::setTheme($theme);
    }

    /**
     * {@inheritDoc}
     */
    public function getFacilities()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFacilities', []);

        return parent::getFacilities();
    }

    /**
     * {@inheritDoc}
     */
    public function setFacilities($facilities)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFacilities', [$facilities]);

        return parent::setFacilities($facilities);
    }

    /**
     * {@inheritDoc}
     */
    public function getRating()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRating', []);

        return parent::getRating();
    }

    /**
     * {@inheritDoc}
     */
    public function setRating($rating)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRating', [$rating]);

        return parent::setRating($rating);
    }

    /**
     * {@inheritDoc}
     */
    public function getBookingConfig()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBookingConfig', []);

        return parent::getBookingConfig();
    }

    /**
     * {@inheritDoc}
     */
    public function setBookingConfig(\MBH\Bundle\ChannelManagerBundle\Document\BookingConfig $bookingConfig)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setBookingConfig', [$bookingConfig]);

        return parent::setBookingConfig($bookingConfig);
    }

    /**
     * {@inheritDoc}
     */
    public function getHotelinnConfig()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getHotelinnConfig', []);

        return parent::getHotelinnConfig();
    }

    /**
     * {@inheritDoc}
     */
    public function setHotelinnConfig(\MBH\Bundle\ChannelManagerBundle\Document\HotelinnConfig $hotelinnConfig)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setHotelinnConfig', [$hotelinnConfig]);

        return parent::setHotelinnConfig($hotelinnConfig);
    }

    /**
     * {@inheritDoc}
     */
    public function getOstrovokConfig()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOstrovokConfig', []);

        return parent::getOstrovokConfig();
    }

    /**
     * {@inheritDoc}
     */
    public function setOstrovokConfig(\MBH\Bundle\ChannelManagerBundle\Document\OstrovokConfig $ostrovokConfig)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOstrovokConfig', [$ostrovokConfig]);

        return parent::setOstrovokConfig($ostrovokConfig);
    }

    /**
     * {@inheritDoc}
     */
    public function preUpdate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'preUpdate', []);

        return parent::preUpdate();
    }

    /**
     * {@inheritDoc}
     */
    public function getCity()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCity', []);

        return parent::getCity();
    }

    /**
     * {@inheritDoc}
     */
    public function setCity(\MBH\Bundle\HotelBundle\Document\City $city)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCity', [$city]);

        return parent::setCity($city);
    }

    /**
     * {@inheritDoc}
     */
    public function getStreet()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStreet', []);

        return parent::getStreet();
    }

    /**
     * {@inheritDoc}
     */
    public function setStreet($street)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setStreet', [$street]);

        return parent::setStreet($street);
    }

    /**
     * {@inheritDoc}
     */
    public function getHouse()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getHouse', []);

        return parent::getHouse();
    }

    /**
     * {@inheritDoc}
     */
    public function setHouse($house)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setHouse', [$house]);

        return parent::setHouse($house);
    }

    /**
     * {@inheritDoc}
     */
    public function getCorpus()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCorpus', []);

        return parent::getCorpus();
    }

    /**
     * {@inheritDoc}
     */
    public function setCorpus($corpus)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCorpus', [$corpus]);

        return parent::setCorpus($corpus);
    }

    /**
     * {@inheritDoc}
     */
    public function getFlat()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFlat', []);

        return parent::getFlat();
    }

    /**
     * {@inheritDoc}
     */
    public function setFlat($flat)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFlat', [$flat]);

        return parent::setFlat($flat);
    }

    /**
     * {@inheritDoc}
     */
    public function getHousings()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getHousings', []);

        return parent::getHousings();
    }

    /**
     * {@inheritDoc}
     */
    public function setHousings(array $housings)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setHousings', [$housings]);

        return parent::setHousings($housings);
    }

    /**
     * {@inheritDoc}
     */
    public function addHousing(\MBH\Bundle\HotelBundle\Document\Housing $housing)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addHousing', [$housing]);

        return parent::addHousing($housing);
    }

    /**
     * {@inheritDoc}
     */
    public function getLogoUrl()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLogoUrl', []);

        return parent::getLogoUrl();
    }

    /**
     * {@inheritDoc}
     */
    public function getFile()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFile', []);

        return parent::getFile();
    }

    /**
     * {@inheritDoc}
     */
    public function setFile(\Symfony\Component\HttpFoundation\File\UploadedFile $file = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFile', [$file]);

        return parent::setFile($file);
    }

    /**
     * {@inheritDoc}
     */
    public function getPath()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPath', []);

        return parent::getPath();
    }

    /**
     * {@inheritDoc}
     */
    public function getUploadRootDir()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUploadRootDir', []);

        return parent::getUploadRootDir();
    }

    /**
     * {@inheritDoc}
     */
    public function getLogo()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLogo', []);

        return parent::getLogo();
    }

    /**
     * {@inheritDoc}
     */
    public function setLogo($logo)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLogo', [$logo]);

        return parent::setLogo($logo);
    }

    /**
     * {@inheritDoc}
     */
    public function uploadFile()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'uploadFile', []);

        return parent::uploadFile();
    }

    /**
     * {@inheritDoc}
     */
    public function deleteFile()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'deleteFile', []);

        return parent::deleteFile();
    }

    /**
     * {@inheritDoc}
     */
    public function getOrganization()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOrganization', []);

        return parent::getOrganization();
    }

    /**
     * {@inheritDoc}
     */
    public function setOrganization(\MBH\Bundle\PackageBundle\Document\Organization $organization = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOrganization', [$organization]);

        return parent::setOrganization($organization);
    }

    /**
     * {@inheritDoc}
     */
    public function getVegaAddressId()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getVegaAddressId', []);

        return parent::getVegaAddressId();
    }

    /**
     * {@inheritDoc}
     */
    public function setVegaAddressId($vegaAddressId)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setVegaAddressId', [$vegaAddressId]);

        return parent::setVegaAddressId($vegaAddressId);
    }

    /**
     * {@inheritDoc}
     */
    public function jsonSerialize()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'jsonSerialize', []);

        return parent::jsonSerialize();
    }

    /**
     * {@inheritDoc}
     */
    public function getMyallocatorConfig()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMyallocatorConfig', []);

        return parent::getMyallocatorConfig();
    }

    /**
     * {@inheritDoc}
     */
    public function setMyallocatorConfig(\MBH\Bundle\ChannelManagerBundle\Document\MyallocatorConfig $myallocatorConfig)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMyallocatorConfig', [$myallocatorConfig]);

        return parent::setMyallocatorConfig($myallocatorConfig);
    }

    /**
     * {@inheritDoc}
     */
    public function getRoomTypesCategories()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRoomTypesCategories', []);

        return parent::getRoomTypesCategories();
    }

    /**
     * {@inheritDoc}
     */
    public function setRoomTypesCategories(\MBH\Bundle\HotelBundle\Document\RoomTypeCategory $roomTypesCategories = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRoomTypesCategories', [$roomTypesCategories]);

        return parent::setRoomTypesCategories($roomTypesCategories);
    }

    /**
     * {@inheritDoc}
     */
    public function getDescription()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDescription', []);

        return parent::getDescription();
    }

    /**
     * {@inheritDoc}
     */
    public function setDescription($description)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDescription', [$description]);

        return parent::setDescription($description);
    }

    /**
     * {@inheritDoc}
     */
    public function getIngredientCategories()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIngredientCategories', []);

        return parent::getIngredientCategories();
    }

    /**
     * {@inheritDoc}
     */
    public function setIngredientCategories($ingredientCategories)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIngredientCategories', [$ingredientCategories]);

        return parent::setIngredientCategories($ingredientCategories);
    }

    /**
     * {@inheritDoc}
     */
    public function getDishMenuCategories()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDishMenuCategories', []);

        return parent::getDishMenuCategories();
    }

    /**
     * {@inheritDoc}
     */
    public function setDishMenuCategories($dishMenuCategories)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDishMenuCategories', [$dishMenuCategories]);

        return parent::setDishMenuCategories($dishMenuCategories);
    }

    /**
     * {@inheritDoc}
     */
    public function addDishMenuCategories(\MBH\Bundle\RestaurantBundle\Document\DishMenuCategory $dishMenuCategory)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addDishMenuCategories', [$dishMenuCategory]);

        return parent::addDishMenuCategories($dishMenuCategory);
    }

    /**
     * {@inheritDoc}
     */
    public function getIsEnabled()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIsEnabled', []);

        return parent::getIsEnabled();
    }

    /**
     * {@inheritDoc}
     */
    public function setIsEnabled($isEnabled)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIsEnabled', [$isEnabled]);

        return parent::setIsEnabled($isEnabled);
    }

    /**
     * {@inheritDoc}
     */
    public function __toString()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, '__toString', []);

        return parent::__toString();
    }

    /**
     * {@inheritDoc}
     */
    public function getName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getName', []);

        return parent::getName();
    }

    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setCreatedAt(\DateTime $createdAt)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCreatedAt', [$createdAt]);

        return parent::setCreatedAt($createdAt);
    }

    /**
     * {@inheritDoc}
     */
    public function getCreatedAt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreatedAt', []);

        return parent::getCreatedAt();
    }

    /**
     * {@inheritDoc}
     */
    public function setUpdatedAt(\DateTime $updatedAt)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUpdatedAt', [$updatedAt]);

        return parent::setUpdatedAt($updatedAt);
    }

    /**
     * {@inheritDoc}
     */
    public function getUpdatedAt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUpdatedAt', []);

        return parent::getUpdatedAt();
    }

    /**
     * {@inheritDoc}
     */
    public function setDeletedAt(\DateTime $deletedAt = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDeletedAt', [$deletedAt]);

        return parent::setDeletedAt($deletedAt);
    }

    /**
     * {@inheritDoc}
     */
    public function getDeletedAt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDeletedAt', []);

        return parent::getDeletedAt();
    }

    /**
     * {@inheritDoc}
     */
    public function isDeleted()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isDeleted', []);

        return parent::isDeleted();
    }

    /**
     * {@inheritDoc}
     */
    public function setCreatedBy($createdBy)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCreatedBy', [$createdBy]);

        return parent::setCreatedBy($createdBy);
    }

    /**
     * {@inheritDoc}
     */
    public function getCreatedBy()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreatedBy', []);

        return parent::getCreatedBy();
    }

    /**
     * {@inheritDoc}
     */
    public function setUpdatedBy($updatedBy)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUpdatedBy', [$updatedBy]);

        return parent::setUpdatedBy($updatedBy);
    }

    /**
     * {@inheritDoc}
     */
    public function getUpdatedBy()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUpdatedBy', []);

        return parent::getUpdatedBy();
    }

    /**
     * {@inheritDoc}
     */
    public function getInternationalTitle()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getInternationalTitle', []);

        return parent::getInternationalTitle();
    }

    /**
     * {@inheritDoc}
     */
    public function setInternationalTitle($internationalTitle)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setInternationalTitle', [$internationalTitle]);

        return parent::setInternationalTitle($internationalTitle);
    }

    /**
     * {@inheritDoc}
     */
    public function getLocaleTitle($locale = 'en')
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLocaleTitle', [$locale]);

        return parent::getLocaleTitle($locale);
    }

}
