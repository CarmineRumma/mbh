<?php

namespace MongoDBODMProxies\__CG__\MBH\Bundle\ClientBundle\Document;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class ClientConfig extends \MBH\Bundle\ClientBundle\Document\ClientConfig implements \Doctrine\ODM\MongoDB\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', 'isSendSms', 'useRoomTypeCategory', 'searchDates', 'searchWindows', 'paymentSystem', 'robokassa', 'payanyway', 'moneymail', 'uniteller', 'rbk', 'successUrl', 'failUrl', 'isInstantSearch', 'id', 'isEnabled', 'createdAt', 'updatedAt', 'deletedAt', 'createdBy', 'updatedBy'];
        }

        return ['__isInitialized__', 'isSendSms', 'useRoomTypeCategory', 'searchDates', 'searchWindows', 'paymentSystem', 'robokassa', 'payanyway', 'moneymail', 'uniteller', 'rbk', 'successUrl', 'failUrl', 'isInstantSearch', 'id', 'isEnabled', 'createdAt', 'updatedAt', 'deletedAt', 'createdBy', 'updatedBy'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (ClientConfig $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * {@inheritDoc}
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);

        parent::__clone();
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function setIsSendSms($isSendSms)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIsSendSms', [$isSendSms]);

        return parent::setIsSendSms($isSendSms);
    }

    /**
     * {@inheritDoc}
     */
    public function getIsSendSms()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIsSendSms', []);

        return parent::getIsSendSms();
    }

    /**
     * {@inheritDoc}
     */
    public function getUseRoomTypeCategory()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUseRoomTypeCategory', []);

        return parent::getUseRoomTypeCategory();
    }

    /**
     * {@inheritDoc}
     */
    public function setUseRoomTypeCategory($useRoomTypeCategory)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUseRoomTypeCategory', [$useRoomTypeCategory]);

        return parent::setUseRoomTypeCategory($useRoomTypeCategory);
    }

    /**
     * {@inheritDoc}
     */
    public function setRobokassa(\MBH\Bundle\ClientBundle\Document\Robokassa $robokassa)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRobokassa', [$robokassa]);

        return parent::setRobokassa($robokassa);
    }

    /**
     * {@inheritDoc}
     */
    public function getRobokassa()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRobokassa', []);

        return parent::getRobokassa();
    }

    /**
     * {@inheritDoc}
     */
    public function setPayanyway(\MBH\Bundle\ClientBundle\Document\Payanyway $payanyway)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPayanyway', [$payanyway]);

        return parent::setPayanyway($payanyway);
    }

    /**
     * {@inheritDoc}
     */
    public function getPayanyway()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPayanyway', []);

        return parent::getPayanyway();
    }

    /**
     * {@inheritDoc}
     */
    public function setMoneymail(\MBH\Bundle\ClientBundle\Document\Moneymail $moneymail)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMoneymail', [$moneymail]);

        return parent::setMoneymail($moneymail);
    }

    /**
     * {@inheritDoc}
     */
    public function getMoneymail()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMoneymail', []);

        return parent::getMoneymail();
    }

    /**
     * {@inheritDoc}
     */
    public function setUniteller(\MBH\Bundle\ClientBundle\Document\Uniteller $uniteller)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUniteller', [$uniteller]);

        return parent::setUniteller($uniteller);
    }

    /**
     * {@inheritDoc}
     */
    public function getUniteller()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUniteller', []);

        return parent::getUniteller();
    }

    /**
     * {@inheritDoc}
     */
    public function getRbk()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRbk', []);

        return parent::getRbk();
    }

    /**
     * {@inheritDoc}
     */
    public function setRbk($rbk)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRbk', [$rbk]);

        return parent::setRbk($rbk);
    }

    /**
     * {@inheritDoc}
     */
    public function setPaymentSystem($paymentSystem)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPaymentSystem', [$paymentSystem]);

        return parent::setPaymentSystem($paymentSystem);
    }

    /**
     * {@inheritDoc}
     */
    public function getPaymentSystem()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPaymentSystem', []);

        return parent::getPaymentSystem();
    }

    /**
     * {@inheritDoc}
     */
    public function getPaymentSystemDoc()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPaymentSystemDoc', []);

        return parent::getPaymentSystemDoc();
    }

    /**
     * {@inheritDoc}
     */
    public function getFormData(\MBH\Bundle\CashBundle\Document\CashDocument $cashDocument, $url = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFormData', [$cashDocument, $url]);

        return parent::getFormData($cashDocument, $url);
    }

    /**
     * {@inheritDoc}
     */
    public function checkRequest(\Symfony\Component\HttpFoundation\Request $request)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'checkRequest', [$request]);

        return parent::checkRequest($request);
    }

    /**
     * {@inheritDoc}
     */
    public function getSearchDates()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSearchDates', []);

        return parent::getSearchDates();
    }

    /**
     * {@inheritDoc}
     */
    public function setSearchDates($searchDates)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSearchDates', [$searchDates]);

        return parent::setSearchDates($searchDates);
    }

    /**
     * {@inheritDoc}
     */
    public function getSearchWindows()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSearchWindows', []);

        return parent::getSearchWindows();
    }

    /**
     * {@inheritDoc}
     */
    public function setSearchWindows($searchWindows)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSearchWindows', [$searchWindows]);

        return parent::setSearchWindows($searchWindows);
    }

    /**
     * {@inheritDoc}
     */
    public function getSuccessUrl()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSuccessUrl', []);

        return parent::getSuccessUrl();
    }

    /**
     * {@inheritDoc}
     */
    public function setSuccessUrl($successUrl)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSuccessUrl', [$successUrl]);

        return parent::setSuccessUrl($successUrl);
    }

    /**
     * {@inheritDoc}
     */
    public function getFailUrl()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFailUrl', []);

        return parent::getFailUrl();
    }

    /**
     * {@inheritDoc}
     */
    public function setFailUrl($failUrl)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFailUrl', [$failUrl]);

        return parent::setFailUrl($failUrl);
    }

    /**
     * {@inheritDoc}
     */
    public function isIsInstantSearch()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isIsInstantSearch', []);

        return parent::isIsInstantSearch();
    }

    /**
     * {@inheritDoc}
     */
    public function setIsInstantSearch($isInstantSearch)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIsInstantSearch', [$isInstantSearch]);

        return parent::setIsInstantSearch($isInstantSearch);
    }

    /**
     * {@inheritDoc}
     */
    public function getIsEnabled()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIsEnabled', []);

        return parent::getIsEnabled();
    }

    /**
     * {@inheritDoc}
     */
    public function setIsEnabled($isEnabled)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIsEnabled', [$isEnabled]);

        return parent::setIsEnabled($isEnabled);
    }

    /**
     * {@inheritDoc}
     */
    public function __toString()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, '__toString', []);

        return parent::__toString();
    }

    /**
     * {@inheritDoc}
     */
    public function getName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getName', []);

        return parent::getName();
    }

    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setCreatedAt(\DateTime $createdAt)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCreatedAt', [$createdAt]);

        return parent::setCreatedAt($createdAt);
    }

    /**
     * {@inheritDoc}
     */
    public function getCreatedAt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreatedAt', []);

        return parent::getCreatedAt();
    }

    /**
     * {@inheritDoc}
     */
    public function setUpdatedAt(\DateTime $updatedAt)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUpdatedAt', [$updatedAt]);

        return parent::setUpdatedAt($updatedAt);
    }

    /**
     * {@inheritDoc}
     */
    public function getUpdatedAt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUpdatedAt', []);

        return parent::getUpdatedAt();
    }

    /**
     * {@inheritDoc}
     */
    public function setDeletedAt(\DateTime $deletedAt = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDeletedAt', [$deletedAt]);

        return parent::setDeletedAt($deletedAt);
    }

    /**
     * {@inheritDoc}
     */
    public function getDeletedAt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDeletedAt', []);

        return parent::getDeletedAt();
    }

    /**
     * {@inheritDoc}
     */
    public function isDeleted()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isDeleted', []);

        return parent::isDeleted();
    }

    /**
     * {@inheritDoc}
     */
    public function setCreatedBy($createdBy)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCreatedBy', [$createdBy]);

        return parent::setCreatedBy($createdBy);
    }

    /**
     * {@inheritDoc}
     */
    public function getCreatedBy()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreatedBy', []);

        return parent::getCreatedBy();
    }

    /**
     * {@inheritDoc}
     */
    public function setUpdatedBy($updatedBy)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUpdatedBy', [$updatedBy]);

        return parent::setUpdatedBy($updatedBy);
    }

    /**
     * {@inheritDoc}
     */
    public function getUpdatedBy()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUpdatedBy', []);

        return parent::getUpdatedBy();
    }

}
