<?php

namespace MongoDBODMProxies\__CG__\MBH\Bundle\ClientBundle\Document;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Robokassa extends \MBH\Bundle\ClientBundle\Document\Robokassa implements \Doctrine\ODM\MongoDB\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', 'robokassaMerchantLogin', 'robokassaMerchantPass1', 'robokassaMerchantPass2'];
        }

        return ['__isInitialized__', 'robokassaMerchantLogin', 'robokassaMerchantPass1', 'robokassaMerchantPass2'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Robokassa $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function setRobokassaMerchantLogin($robokassaMerchantLogin)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRobokassaMerchantLogin', [$robokassaMerchantLogin]);

        return parent::setRobokassaMerchantLogin($robokassaMerchantLogin);
    }

    /**
     * {@inheritDoc}
     */
    public function getRobokassaMerchantLogin()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRobokassaMerchantLogin', []);

        return parent::getRobokassaMerchantLogin();
    }

    /**
     * {@inheritDoc}
     */
    public function setRobokassaMerchantPass1($robokassaMerchantPass1)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRobokassaMerchantPass1', [$robokassaMerchantPass1]);

        return parent::setRobokassaMerchantPass1($robokassaMerchantPass1);
    }

    /**
     * {@inheritDoc}
     */
    public function getRobokassaMerchantPass1()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRobokassaMerchantPass1', []);

        return parent::getRobokassaMerchantPass1();
    }

    /**
     * {@inheritDoc}
     */
    public function setRobokassaMerchantPass2($robokassaMerchantPass2)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRobokassaMerchantPass2', [$robokassaMerchantPass2]);

        return parent::setRobokassaMerchantPass2($robokassaMerchantPass2);
    }

    /**
     * {@inheritDoc}
     */
    public function getRobokassaMerchantPass2()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRobokassaMerchantPass2', []);

        return parent::getRobokassaMerchantPass2();
    }

    /**
     * {@inheritDoc}
     */
    public function getFormData(\MBH\Bundle\CashBundle\Document\CashDocument $cashDocument, $url = NULL, $checkUrl = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFormData', [$cashDocument, $url, $checkUrl]);

        return parent::getFormData($cashDocument, $url, $checkUrl);
    }

    /**
     * {@inheritDoc}
     */
    public function getSignature(\MBH\Bundle\CashBundle\Document\CashDocument $cashDocument, $url = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSignature', [$cashDocument, $url]);

        return parent::getSignature($cashDocument, $url);
    }

    /**
     * {@inheritDoc}
     */
    public function checkRequest(\Symfony\Component\HttpFoundation\Request $request)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'checkRequest', [$request]);

        return parent::checkRequest($request);
    }

}
