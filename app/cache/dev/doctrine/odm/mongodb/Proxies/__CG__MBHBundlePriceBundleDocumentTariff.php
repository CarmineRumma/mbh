<?php

namespace MongoDBODMProxies\__CG__\MBH\Bundle\PriceBundle\Document;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Tariff extends \MBH\Bundle\PriceBundle\Document\Tariff implements \Doctrine\ODM\MongoDB\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', 'hotel', 'fullTitle', 'title', 'description', 'isDefault', 'isOnline', 'begin', 'end', 'childAge', 'infantAge', 'promotions', 'restrictions', 'priceCaches', 'roomCaches', 'defaultPromotion', 'services', 'defaultServices', 'childOptions', 'children', 'parent', 'defaultForMerging', 'id', 'isEnabled', 'createdAt', 'updatedAt', 'deletedAt', 'createdBy', 'updatedBy', 'condition', 'conditionQuantity', 'additionalCondition', 'additionalConditionQuantity'];
        }

        return ['__isInitialized__', 'hotel', 'fullTitle', 'title', 'description', 'isDefault', 'isOnline', 'begin', 'end', 'childAge', 'infantAge', 'promotions', 'restrictions', 'priceCaches', 'roomCaches', 'defaultPromotion', 'services', 'defaultServices', 'childOptions', 'children', 'parent', 'defaultForMerging', 'id', 'isEnabled', 'createdAt', 'updatedAt', 'deletedAt', 'createdBy', 'updatedBy', 'condition', 'conditionQuantity', 'additionalCondition', 'additionalConditionQuantity'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Tariff $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * {@inheritDoc}
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);

        parent::__clone();
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function setHotel(\MBH\Bundle\HotelBundle\Document\Hotel $hotel)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setHotel', [$hotel]);

        return parent::setHotel($hotel);
    }

    /**
     * {@inheritDoc}
     */
    public function getHotel()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getHotel', []);

        return parent::getHotel();
    }

    /**
     * {@inheritDoc}
     */
    public function setFullTitle($fullTitle)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFullTitle', [$fullTitle]);

        return parent::setFullTitle($fullTitle);
    }

    /**
     * {@inheritDoc}
     */
    public function getFullTitle()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFullTitle', []);

        return parent::getFullTitle();
    }

    /**
     * {@inheritDoc}
     */
    public function setTitle($title)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTitle', [$title]);

        return parent::setTitle($title);
    }

    /**
     * {@inheritDoc}
     */
    public function getTitle()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTitle', []);

        return parent::getTitle();
    }

    /**
     * {@inheritDoc}
     */
    public function setDescription($description)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDescription', [$description]);

        return parent::setDescription($description);
    }

    /**
     * {@inheritDoc}
     */
    public function getDescription()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDescription', []);

        return parent::getDescription();
    }

    /**
     * {@inheritDoc}
     */
    public function setIsDefault($isDefault)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIsDefault', [$isDefault]);

        return parent::setIsDefault($isDefault);
    }

    /**
     * {@inheritDoc}
     */
    public function getIsDefault()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIsDefault', []);

        return parent::getIsDefault();
    }

    /**
     * {@inheritDoc}
     */
    public function setIsOnline($isOnline)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIsOnline', [$isOnline]);

        return parent::setIsOnline($isOnline);
    }

    /**
     * {@inheritDoc}
     */
    public function getIsOnline()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIsOnline', []);

        return parent::getIsOnline();
    }

    /**
     * {@inheritDoc}
     */
    public function setBegin($begin)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setBegin', [$begin]);

        return parent::setBegin($begin);
    }

    /**
     * {@inheritDoc}
     */
    public function getBegin()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBegin', []);

        return parent::getBegin();
    }

    /**
     * {@inheritDoc}
     */
    public function setEnd($end)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEnd', [$end]);

        return parent::setEnd($end);
    }

    /**
     * {@inheritDoc}
     */
    public function getEnd()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEnd', []);

        return parent::getEnd();
    }

    /**
     * {@inheritDoc}
     */
    public function setChildAge($childAge)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setChildAge', [$childAge]);

        return parent::setChildAge($childAge);
    }

    /**
     * {@inheritDoc}
     */
    public function getChildAge()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getChildAge', []);

        return parent::getChildAge();
    }

    /**
     * {@inheritDoc}
     */
    public function setInfantAge($infantAge)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setInfantAge', [$infantAge]);

        return parent::setInfantAge($infantAge);
    }

    /**
     * {@inheritDoc}
     */
    public function getInfantAge()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getInfantAge', []);

        return parent::getInfantAge();
    }

    /**
     * {@inheritDoc}
     */
    public function getPromotions()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPromotions', []);

        return parent::getPromotions();
    }

    /**
     * {@inheritDoc}
     */
    public function setPromotions($promotions)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPromotions', [$promotions]);

        return parent::setPromotions($promotions);
    }

    /**
     * {@inheritDoc}
     */
    public function getDefaultPromotion()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDefaultPromotion', []);

        return parent::getDefaultPromotion();
    }

    /**
     * {@inheritDoc}
     */
    public function setDefaultPromotion(\MBH\Bundle\PriceBundle\Document\Promotion $defaultPromotion = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDefaultPromotion', [$defaultPromotion]);

        return parent::setDefaultPromotion($defaultPromotion);
    }

    /**
     * {@inheritDoc}
     */
    public function getServices()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getServices', []);

        return parent::getServices();
    }

    /**
     * {@inheritDoc}
     */
    public function setServices($services)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setServices', [$services]);

        return parent::setServices($services);
    }

    /**
     * {@inheritDoc}
     */
    public function addDefaultService(\MBH\Bundle\PriceBundle\Document\TariffService $defaultService)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addDefaultService', [$defaultService]);

        return parent::addDefaultService($defaultService);
    }

    /**
     * {@inheritDoc}
     */
    public function addPromotion(\MBH\Bundle\PriceBundle\Document\Promotion $promotion)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addPromotion', [$promotion]);

        return parent::addPromotion($promotion);
    }

    /**
     * {@inheritDoc}
     */
    public function addService(\MBH\Bundle\PriceBundle\Document\Service $service)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addService', [$service]);

        return parent::addService($service);
    }

    /**
     * {@inheritDoc}
     */
    public function getDefaultServices()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDefaultServices', []);

        return parent::getDefaultServices();
    }

    /**
     * {@inheritDoc}
     */
    public function setDefaultServices($defaultServices)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDefaultServices', [$defaultServices]);

        return parent::setDefaultServices($defaultServices);
    }

    /**
     * {@inheritDoc}
     */
    public function getParent()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getParent', []);

        return parent::getParent();
    }

    /**
     * {@inheritDoc}
     */
    public function setParent($parent)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setParent', [$parent]);

        return parent::setParent($parent);
    }

    /**
     * {@inheritDoc}
     */
    public function getChildOptions()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getChildOptions', []);

        return parent::getChildOptions();
    }

    /**
     * {@inheritDoc}
     */
    public function setChildOptions($childOptions)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setChildOptions', [$childOptions]);

        return parent::setChildOptions($childOptions);
    }

    /**
     * {@inheritDoc}
     */
    public function getChildren()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getChildren', []);

        return parent::getChildren();
    }

    /**
     * {@inheritDoc}
     */
    public function setChildren($children)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setChildren', [$children]);

        return parent::setChildren($children);
    }

    /**
     * {@inheritDoc}
     */
    public function isDefaultForMerging(): bool
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isDefaultForMerging', []);

        return parent::isDefaultForMerging();
    }

    /**
     * {@inheritDoc}
     */
    public function setDefaultForMerging(bool $defaultForMerging)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDefaultForMerging', [$defaultForMerging]);

        return parent::setDefaultForMerging($defaultForMerging);
    }

    /**
     * {@inheritDoc}
     */
    public function getRestrictions()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRestrictions', []);

        return parent::getRestrictions();
    }

    /**
     * {@inheritDoc}
     */
    public function setRestrictions($restrictions)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRestrictions', [$restrictions]);

        return parent::setRestrictions($restrictions);
    }

    /**
     * {@inheritDoc}
     */
    public function getPriceCaches()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPriceCaches', []);

        return parent::getPriceCaches();
    }

    /**
     * {@inheritDoc}
     */
    public function setPriceCaches($priceCaches)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPriceCaches', [$priceCaches]);

        return parent::setPriceCaches($priceCaches);
    }

    /**
     * {@inheritDoc}
     */
    public function getRoomCaches()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRoomCaches', []);

        return parent::getRoomCaches();
    }

    /**
     * {@inheritDoc}
     */
    public function setRoomCaches($roomCaches)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRoomCaches', [$roomCaches]);

        return parent::setRoomCaches($roomCaches);
    }

    /**
     * {@inheritDoc}
     */
    public function getIsEnabled()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIsEnabled', []);

        return parent::getIsEnabled();
    }

    /**
     * {@inheritDoc}
     */
    public function setIsEnabled($isEnabled)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIsEnabled', [$isEnabled]);

        return parent::setIsEnabled($isEnabled);
    }

    /**
     * {@inheritDoc}
     */
    public function __toString()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, '__toString', []);

        return parent::__toString();
    }

    /**
     * {@inheritDoc}
     */
    public function getName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getName', []);

        return parent::getName();
    }

    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setCreatedAt(\DateTime $createdAt)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCreatedAt', [$createdAt]);

        return parent::setCreatedAt($createdAt);
    }

    /**
     * {@inheritDoc}
     */
    public function getCreatedAt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreatedAt', []);

        return parent::getCreatedAt();
    }

    /**
     * {@inheritDoc}
     */
    public function setUpdatedAt(\DateTime $updatedAt)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUpdatedAt', [$updatedAt]);

        return parent::setUpdatedAt($updatedAt);
    }

    /**
     * {@inheritDoc}
     */
    public function getUpdatedAt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUpdatedAt', []);

        return parent::getUpdatedAt();
    }

    /**
     * {@inheritDoc}
     */
    public function setDeletedAt(\DateTime $deletedAt = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDeletedAt', [$deletedAt]);

        return parent::setDeletedAt($deletedAt);
    }

    /**
     * {@inheritDoc}
     */
    public function getDeletedAt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDeletedAt', []);

        return parent::getDeletedAt();
    }

    /**
     * {@inheritDoc}
     */
    public function isDeleted()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isDeleted', []);

        return parent::isDeleted();
    }

    /**
     * {@inheritDoc}
     */
    public function setCreatedBy($createdBy)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCreatedBy', [$createdBy]);

        return parent::setCreatedBy($createdBy);
    }

    /**
     * {@inheritDoc}
     */
    public function getCreatedBy()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreatedBy', []);

        return parent::getCreatedBy();
    }

    /**
     * {@inheritDoc}
     */
    public function setUpdatedBy($updatedBy)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUpdatedBy', [$updatedBy]);

        return parent::setUpdatedBy($updatedBy);
    }

    /**
     * {@inheritDoc}
     */
    public function getUpdatedBy()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUpdatedBy', []);

        return parent::getUpdatedBy();
    }

    /**
     * {@inheritDoc}
     */
    public function getCondition()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCondition', []);

        return parent::getCondition();
    }

    /**
     * {@inheritDoc}
     */
    public function setCondition($condition)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCondition', [$condition]);

        return parent::setCondition($condition);
    }

    /**
     * {@inheritDoc}
     */
    public function getConditionQuantity()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getConditionQuantity', []);

        return parent::getConditionQuantity();
    }

    /**
     * {@inheritDoc}
     */
    public function setConditionQuantity($conditionQuantity)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setConditionQuantity', [$conditionQuantity]);

        return parent::setConditionQuantity($conditionQuantity);
    }

    /**
     * {@inheritDoc}
     */
    public function getAdditionalCondition()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAdditionalCondition', []);

        return parent::getAdditionalCondition();
    }

    /**
     * {@inheritDoc}
     */
    public function setAdditionalCondition($additionalCondition)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAdditionalCondition', [$additionalCondition]);

        return parent::setAdditionalCondition($additionalCondition);
    }

    /**
     * {@inheritDoc}
     */
    public function getAdditionalConditionQuantity()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAdditionalConditionQuantity', []);

        return parent::getAdditionalConditionQuantity();
    }

    /**
     * {@inheritDoc}
     */
    public function setAdditionalConditionQuantity($additionalConditionQuantity)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAdditionalConditionQuantity', [$additionalConditionQuantity]);

        return parent::setAdditionalConditionQuantity($additionalConditionQuantity);
    }

}
